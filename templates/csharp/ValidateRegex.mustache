// {{{name}}} ({{{dataType}}}) pattern
Regex regex{{{name}}} = new Regex(@"{{{vendorExtensions.x-regex}}}"{{#vendorExtensions.x-modifiers}}{{#-first}}, {{/-first}}RegexOptions.{{{.}}}{{^-last}} | {{/-last}}{{/vendorExtensions.x-modifiers}});
var input{{{name}}} = {{#isUuid}}this.{{{name}}}.ToString("D"){{/isUuid}}{{^isUuid}}this.{{{name}}}{{/isUuid}};
if (string.IsNullOrEmpty(input{{{name}}})) { yield break; } // presence is validated by [Required], not pattern
if (!regex{{{name}}}.IsMatch(input{{{name}}}))
{
    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for {{{name}}}, must match a pattern of " + regex{{{name}}}.ToString(), new [] { "{{{name}}}" });
}