#!/bin/sh
set -eu
# Best-effort: enable pipefail when supported (non-POSIX); ignore if not.
set -o pipefail 2>/dev/null || true
# ref: https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/
#
# Usage example: /bin/sh ./git_push.sh wing328 openapi-petstore-perl "minor update" "gitlab.com"

git_user_id="${1-}"
git_repo_id="${2-}"
release_note="${3-}"
git_host="${4-}"

if [ "$git_host" = "" ]; then
    git_host="{{{gitHost}}}"
    echo "[INFO] No command line input provided. Set \$git_host to $git_host"
fi

if [ "$git_user_id" = "" ]; then
    git_user_id="{{{gitUserId}}}"
    echo "[INFO] No command line input provided. Set \$git_user_id to $git_user_id"
fi

if [ "$git_repo_id" = "" ]; then
    git_repo_id="{{{gitRepoId}}}"
    echo "[INFO] No command line input provided. Set \$git_repo_id to $git_repo_id"
fi

if [ "$release_note" = "" ]; then
    release_note="{{{releaseNote}}}"
    echo "[INFO] No command line input provided. Set \$release_note to $release_note"
fi

# Abort if template placeholders remain
case "$git_host$git_user_id$git_repo_id$release_note" in
  *"{{"*"}}"*) echo "[ERROR] Unresolved template placeholders detected. Aborting."; exit 1;;
esac

# Initialize the local directory as a Git repository
git init

# Adds the files in the local repository and stages them for commit.
git add .

# Commit staged changes (allow empty so initial branch exists)
if git diff --cached --quiet; then
  git commit --allow-empty -m "$release_note"
else
  git commit -m "$release_note"
fi

# Sets the new remote
if ! git remote get-url origin >/dev/null 2>&1; then # origin not defined

    echo "[INFO] Using the git credentials configured in your environment (credential helper/manager)."
    git remote add origin "https://${git_host}/${git_user_id}/${git_repo_id}.git"

fi

# Use DEFAULT_BRANCH env var when provided; fall back to 'main'
branch="${DEFAULT_BRANCH:-main}"

# Ensure we're on the correct local branch
git checkout -B "$branch"

git pull --rebase origin "$branch" || true

# Pushes the changes in the local repository up to the remote repository
echo "Git pushing to https://${git_host}/${git_user_id}/${git_repo_id}.git"
git push -u origin "$branch"
