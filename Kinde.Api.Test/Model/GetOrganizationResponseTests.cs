/*
 * Kinde Management API
 *
 *  Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Kinde.Api.Model;
using Kinde.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Kinde.Api.Test.Model
{
    /// <summary>
    ///  Class for testing GetOrganizationResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetOrganizationResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetOrganizationResponse
        //private GetOrganizationResponse instance;

        public GetOrganizationResponseTests()
        {
            // TODO uncomment below to create an instance of GetOrganizationResponse
            //instance = new GetOrganizationResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetOrganizationResponse
        /// </summary>
        [Fact]
        public void GetOrganizationResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetOrganizationResponse
            //Assert.IsType<GetOrganizationResponse>(instance);
        }

        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Fact]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Handle'
        /// </summary>
        [Fact]
        public void HandleTest()
        {
            // TODO unit test for the property 'Handle'
        }

        /// <summary>
        /// Test the property 'IsDefault'
        /// </summary>
        [Fact]
        public void IsDefaultTest()
        {
            // TODO unit test for the property 'IsDefault'
        }

        /// <summary>
        /// Test the property 'ExternalId'
        /// </summary>
        [Fact]
        public void ExternalIdTest()
        {
            // TODO unit test for the property 'ExternalId'
        }

        /// <summary>
        /// Test the property 'IsAutoMembershipEnabled'
        /// </summary>
        [Fact]
        public void IsAutoMembershipEnabledTest()
        {
            // TODO unit test for the property 'IsAutoMembershipEnabled'
        }

        /// <summary>
        /// Test the property 'Logo'
        /// </summary>
        [Fact]
        public void LogoTest()
        {
            // TODO unit test for the property 'Logo'
        }

        /// <summary>
        /// Test the property 'LogoDark'
        /// </summary>
        [Fact]
        public void LogoDarkTest()
        {
            // TODO unit test for the property 'LogoDark'
        }

        /// <summary>
        /// Test the property 'FaviconSvg'
        /// </summary>
        [Fact]
        public void FaviconSvgTest()
        {
            // TODO unit test for the property 'FaviconSvg'
        }

        /// <summary>
        /// Test the property 'FaviconFallback'
        /// </summary>
        [Fact]
        public void FaviconFallbackTest()
        {
            // TODO unit test for the property 'FaviconFallback'
        }

        /// <summary>
        /// Test the property 'LinkColor'
        /// </summary>
        [Fact]
        public void LinkColorTest()
        {
            // TODO unit test for the property 'LinkColor'
        }

        /// <summary>
        /// Test the property 'BackgroundColor'
        /// </summary>
        [Fact]
        public void BackgroundColorTest()
        {
            // TODO unit test for the property 'BackgroundColor'
        }

        /// <summary>
        /// Test the property 'ButtonColor'
        /// </summary>
        [Fact]
        public void ButtonColorTest()
        {
            // TODO unit test for the property 'ButtonColor'
        }

        /// <summary>
        /// Test the property 'ButtonTextColor'
        /// </summary>
        [Fact]
        public void ButtonTextColorTest()
        {
            // TODO unit test for the property 'ButtonTextColor'
        }

        /// <summary>
        /// Test the property 'LinkColorDark'
        /// </summary>
        [Fact]
        public void LinkColorDarkTest()
        {
            // TODO unit test for the property 'LinkColorDark'
        }

        /// <summary>
        /// Test the property 'BackgroundColorDark'
        /// </summary>
        [Fact]
        public void BackgroundColorDarkTest()
        {
            // TODO unit test for the property 'BackgroundColorDark'
        }

        /// <summary>
        /// Test the property 'ButtonTextColorDark'
        /// </summary>
        [Fact]
        public void ButtonTextColorDarkTest()
        {
            // TODO unit test for the property 'ButtonTextColorDark'
        }

        /// <summary>
        /// Test the property 'ButtonColorDark'
        /// </summary>
        [Fact]
        public void ButtonColorDarkTest()
        {
            // TODO unit test for the property 'ButtonColorDark'
        }

        /// <summary>
        /// Test the property 'ButtonBorderRadius'
        /// </summary>
        [Fact]
        public void ButtonBorderRadiusTest()
        {
            // TODO unit test for the property 'ButtonBorderRadius'
        }

        /// <summary>
        /// Test the property 'CardBorderRadius'
        /// </summary>
        [Fact]
        public void CardBorderRadiusTest()
        {
            // TODO unit test for the property 'CardBorderRadius'
        }

        /// <summary>
        /// Test the property 'InputBorderRadius'
        /// </summary>
        [Fact]
        public void InputBorderRadiusTest()
        {
            // TODO unit test for the property 'InputBorderRadius'
        }

        /// <summary>
        /// Test the property 'ThemeCode'
        /// </summary>
        [Fact]
        public void ThemeCodeTest()
        {
            // TODO unit test for the property 'ThemeCode'
        }

        /// <summary>
        /// Test the property 'ColorScheme'
        /// </summary>
        [Fact]
        public void ColorSchemeTest()
        {
            // TODO unit test for the property 'ColorScheme'
        }

        /// <summary>
        /// Test the property 'CreatedOn'
        /// </summary>
        [Fact]
        public void CreatedOnTest()
        {
            // TODO unit test for the property 'CreatedOn'
        }

        /// <summary>
        /// Test the property 'IsAllowRegistrations'
        /// </summary>
        [Fact]
        public void IsAllowRegistrationsTest()
        {
            // TODO unit test for the property 'IsAllowRegistrations'
        }

        /// <summary>
        /// Test the property 'SenderName'
        /// </summary>
        [Fact]
        public void SenderNameTest()
        {
            // TODO unit test for the property 'SenderName'
        }

        /// <summary>
        /// Test the property 'SenderEmail'
        /// </summary>
        [Fact]
        public void SenderEmailTest()
        {
            // TODO unit test for the property 'SenderEmail'
        }
    }
}
