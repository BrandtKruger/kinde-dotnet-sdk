/*
 * Kinde Accounts API
 *
 * API for querying the current user's permissions, roles, entitlements, and feature flags
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Kinde.Accounts.Client;
using Kinde.Accounts.Api;
// uncomment below to import models
//using Kinde.Accounts.Model;

namespace Kinde.Accounts.Test.Api
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DefaultApiTests : IDisposable
    {
        private DefaultApi instance;

        public DefaultApiTests()
        {
            instance = new DefaultApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DefaultApi
            //Assert.IsType<DefaultApi>(instance);
        }

        /// <summary>
        /// Test GetCurrentOrganization
        /// </summary>
        [Fact]
        public void GetCurrentOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCurrentOrganization();
            //Assert.IsType<CurrentOrganizationResponse>(response);
        }

        /// <summary>
        /// Test GetEntitlement
        /// </summary>
        [Fact]
        public void GetEntitlementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //var response = instance.GetEntitlement(key);
            //Assert.IsType<EntitlementResponse>(response);
        }

        /// <summary>
        /// Test GetEntitlements
        /// </summary>
        [Fact]
        public void GetEntitlementsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetEntitlements();
            //Assert.IsType<EntitlementsResponse>(response);
        }

        /// <summary>
        /// Test GetFeatureFlag
        /// </summary>
        [Fact]
        public void GetFeatureFlagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //var response = instance.GetFeatureFlag(key);
            //Assert.IsType<FeatureFlagResponse>(response);
        }

        /// <summary>
        /// Test GetFeatureFlags
        /// </summary>
        [Fact]
        public void GetFeatureFlagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetFeatureFlags();
            //Assert.IsType<FeatureFlagsResponse>(response);
        }

        /// <summary>
        /// Test GetPermission
        /// </summary>
        [Fact]
        public void GetPermissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //var response = instance.GetPermission(key);
            //Assert.IsType<PermissionResponse>(response);
        }

        /// <summary>
        /// Test GetPermissions
        /// </summary>
        [Fact]
        public void GetPermissionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPermissions();
            //Assert.IsType<PermissionsResponse>(response);
        }

        /// <summary>
        /// Test GetRoles
        /// </summary>
        [Fact]
        public void GetRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetRoles();
            //Assert.IsType<RolesResponse>(response);
        }

        /// <summary>
        /// Test GetUserOrganizations
        /// </summary>
        [Fact]
        public void GetUserOrganizationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetUserOrganizations();
            //Assert.IsType<UserOrganizationsResponse>(response);
        }

        /// <summary>
        /// Test GetUserProfile
        /// </summary>
        [Fact]
        public void GetUserProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetUserProfile();
            //Assert.IsType<UserProfileResponse>(response);
        }
    }
}
