openapi: 3.0.3
info:
  contact:
    name: Kinde Support
    url: https://kinde.com/docs
  description: "API for querying the current user's permissions, roles, entitlements,\
    \ and feature flags"
  title: Kinde Accounts API
  version: 1.0.0
servers:
- description: Kinde Accounts API
  url: "https://{domain}/account_api/v1"
  variables:
    domain:
      default: your-domain.kinde.com
      description: Your Kinde domain
security:
- BearerAuth: []
paths:
  /entitlements:
    get:
      description: Retrieve all entitlements for the current user's organization
      operationId: getEntitlements
      parameters:
      - description: Cursor for fetching the next page (use the value returned by
          metadata.next_page_starting_after)
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of items to return (1-1000, server may cap this)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementsResponse'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Get all entitlements
  /entitlement/{key}:
    get:
      description: Retrieve a specific entitlement by key
      operationId: getEntitlement
      parameters:
      - description: The entitlement key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementResponse'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Entitlement not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Get specific entitlement
  /permissions:
    get:
      description: Retrieve all permissions for the current user
      operationId: getPermissions
      parameters:
      - description: Cursor for fetching the next page (use the value returned by
          metadata.next_page_starting_after)
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of items to return (1-1000, server may cap this)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Get all permissions
  /permission/{key}:
    get:
      description: Retrieve a specific permission by key
      operationId: getPermission
      parameters:
      - description: The permission key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Get specific permission
  /roles:
    get:
      description: Retrieve all roles for the current user
      operationId: getRoles
      parameters:
      - description: Cursor for fetching the next page (use the value returned by
          metadata.next_page_starting_after)
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of items to return (1-1000, server may cap this)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Get all roles
  /feature_flags:
    get:
      description: Retrieve all feature flags for the current user
      operationId: getFeatureFlags
      parameters:
      - description: Cursor for fetching the next page (use the value returned by
          metadata.next_page_starting_after)
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of items to return (server may cap this)
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagsResponse'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get all feature flags
  /feature_flags/{key}:
    get:
      description: Retrieve a specific feature flag by key
      operationId: getFeatureFlag
      parameters:
      - description: The feature flag key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagResponse'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Feature flag not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Get specific feature flag
  /user_organizations:
    get:
      description: Retrieve all organizations for the current user
      operationId: getUserOrganizations
      parameters:
      - description: Cursor for fetching the next page (use the value returned by
          metadata.next_page_starting_after)
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of items to return (server may cap this)
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrganizationsResponse'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Get user organizations
  /user_profile:
    get:
      description: Retrieve the current user's profile information
      operationId: getUserProfile
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Get user profile
  /current_organization:
    get:
      description: Retrieve the current organization information
      operationId: getCurrentOrganization
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentOrganizationResponse'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Get current organization
components:
  schemas:
    Error:
      properties:
        code:
          description: Machine-readable error code
          type: string
        message:
          description: Human-readable error description
          type: string
        request_id:
          description: Correlates client errors with server logs
          type: string
        details:
          additionalProperties: true
          description: Arbitrary error details specific to the error code
          type: object
      required:
      - code
      - message
      type: object
    Metadata:
      example:
        next_page_starting_after: next_page_starting_after
        has_more: true
      properties:
        has_more:
          description: Whether there are more items to fetch
          type: boolean
        next_page_starting_after:
          description: Token for the next page (null when has_more is false)
          type: string
      required:
      - has_more
      type: object
    Entitlement:
      example:
        fixed_charge: 0.8008281904610115
        feature_name: feature_name
        price_name: price_name
        entitlement_limit_min: 5.962133916683182
        feature_key: feature_key
        id: id
        unit_amount: 6.027456183070403
        entitlement_limit_max: 1.4658129805029452
      properties:
        id:
          description: Unique identifier for the entitlement
          type: string
        fixed_charge:
          description: Fixed charge amount
          type: number
        price_name:
          description: Name of the price
          type: string
        unit_amount:
          description: Unit amount
          type: number
        feature_key:
          description: Key of the feature
          type: string
        feature_name:
          description: Name of the feature
          type: string
        entitlement_limit_max:
          description: Maximum entitlement limit
          type: number
        entitlement_limit_min:
          description: Minimum entitlement limit
          type: number
      required:
      - entitlement_limit_max
      - entitlement_limit_min
      - feature_key
      - feature_name
      - fixed_charge
      - id
      - price_name
      - unit_amount
      type: object
    Plan:
      example:
        key: key
        subscribed_on: 2000-01-23T04:56:07.000+00:00
      properties:
        key:
          description: Plan key
          type: string
        subscribed_on:
          description: When the plan was subscribed to
          format: date-time
          type: string
      required:
      - key
      - subscribed_on
      type: object
    EntitlementsResponse:
      example:
        metadata:
          next_page_starting_after: next_page_starting_after
          has_more: true
        data:
          entitlements:
          - fixed_charge: 0.8008281904610115
            feature_name: feature_name
            price_name: price_name
            entitlement_limit_min: 5.962133916683182
            feature_key: feature_key
            id: id
            unit_amount: 6.027456183070403
            entitlement_limit_max: 1.4658129805029452
          - fixed_charge: 0.8008281904610115
            feature_name: feature_name
            price_name: price_name
            entitlement_limit_min: 5.962133916683182
            feature_key: feature_key
            id: id
            unit_amount: 6.027456183070403
            entitlement_limit_max: 1.4658129805029452
          - fixed_charge: 0.8008281904610115
            feature_name: feature_name
            price_name: price_name
            entitlement_limit_min: 5.962133916683182
            feature_key: feature_key
            id: id
            unit_amount: 6.027456183070403
            entitlement_limit_max: 1.4658129805029452
          - fixed_charge: 0.8008281904610115
            feature_name: feature_name
            price_name: price_name
            entitlement_limit_min: 5.962133916683182
            feature_key: feature_key
            id: id
            unit_amount: 6.027456183070403
            entitlement_limit_max: 1.4658129805029452
          - fixed_charge: 0.8008281904610115
            feature_name: feature_name
            price_name: price_name
            entitlement_limit_min: 5.962133916683182
            feature_key: feature_key
            id: id
            unit_amount: 6.027456183070403
            entitlement_limit_max: 1.4658129805029452
          plans:
          - key: key
            subscribed_on: 2000-01-23T04:56:07.000+00:00
          - key: key
            subscribed_on: 2000-01-23T04:56:07.000+00:00
          - key: key
            subscribed_on: 2000-01-23T04:56:07.000+00:00
          - key: key
            subscribed_on: 2000-01-23T04:56:07.000+00:00
          - key: key
            subscribed_on: 2000-01-23T04:56:07.000+00:00
          org_code: org_code
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        data:
          $ref: '#/components/schemas/EntitlementsResponse_data'
      required:
      - data
      - metadata
      type: object
    EntitlementResponse:
      example:
        data:
          entitlement:
            fixed_charge: 0.8008281904610115
            feature_name: feature_name
            price_name: price_name
            entitlement_limit_min: 5.962133916683182
            feature_key: feature_key
            id: id
            unit_amount: 6.027456183070403
            entitlement_limit_max: 1.4658129805029452
          org_code: org_code
      properties:
        data:
          $ref: '#/components/schemas/EntitlementResponse_data'
      required:
      - data
      type: object
    Permission:
      example:
        name: name
        description: description
        id: id
      properties:
        id:
          description: Unique identifier for the permission
          type: string
        name:
          description: Name of the permission
          type: string
        description:
          description: Description of the permission
          type: string
      required:
      - id
      - name
      type: object
    PermissionsResponse:
      example:
        metadata:
          next_page_starting_after: next_page_starting_after
          has_more: true
        data:
        - name: name
          description: description
          id: id
        - name: name
          description: description
          id: id
        - name: name
          description: description
          id: id
        - name: name
          description: description
          id: id
        - name: name
          description: description
          id: id
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/Permission'
          maxItems: 1000
          type: array
      required:
      - data
      - metadata
      type: object
    PermissionResponse:
      example:
        data:
          name: name
          description: description
          id: id
      properties:
        data:
          $ref: '#/components/schemas/Permission'
      required:
      - data
      type: object
    Role:
      example:
        name: name
        description: description
        id: id
      properties:
        id:
          description: Unique identifier for the role
          type: string
        name:
          description: Name of the role
          type: string
        description:
          description: Description of the role
          type: string
      required:
      - id
      - name
      type: object
    RolesResponse:
      example:
        metadata:
          next_page_starting_after: next_page_starting_after
          has_more: true
        data:
        - name: name
          description: description
          id: id
        - name: name
          description: description
          id: id
        - name: name
          description: description
          id: id
        - name: name
          description: description
          id: id
        - name: name
          description: description
          id: id
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/Role'
          maxItems: 1000
          type: array
      required:
      - data
      - metadata
      type: object
    FeatureFlag:
      example:
        name: name
        id: id
        type: type
        value: null
        key: key
      properties:
        id:
          description: Unique identifier for the feature flag
          type: string
        name:
          description: Name of the feature flag
          type: string
        key:
          description: Key of the feature flag
          type: string
        type:
          description: Type of the feature flag
          type: string
        value:
          $ref: '#/components/schemas/FeatureFlag_value'
      required:
      - id
      - key
      - name
      - type
      - value
      type: object
    FeatureFlagsResponse:
      example:
        metadata:
          next_page_starting_after: next_page_starting_after
          has_more: true
        data:
        - name: name
          id: id
          type: type
          value: null
          key: key
        - name: name
          id: id
          type: type
          value: null
          key: key
        - name: name
          id: id
          type: type
          value: null
          key: key
        - name: name
          id: id
          type: type
          value: null
          key: key
        - name: name
          id: id
          type: type
          value: null
          key: key
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/FeatureFlag'
          maxItems: 1000
          type: array
      required:
      - data
      - metadata
      type: object
    FeatureFlagResponse:
      example:
        data:
          name: name
          id: id
          type: type
          value: null
          key: key
      properties:
        data:
          $ref: '#/components/schemas/FeatureFlag'
      required:
      - data
      type: object
    Organization:
      example:
        code: code
        name: name
        id: id
      properties:
        id:
          description: Unique identifier for the organization
          type: string
        name:
          description: Name of the organization
          type: string
        code:
          description: Code of the organization
          type: string
      required:
      - code
      - id
      - name
      type: object
    UserOrganizationsResponse:
      example:
        metadata:
          next_page_starting_after: next_page_starting_after
          has_more: true
        data:
        - code: code
          name: name
          id: id
        - code: code
          name: name
          id: id
        - code: code
          name: name
          id: id
        - code: code
          name: name
          id: id
        - code: code
          name: name
          id: id
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        data:
          items:
            $ref: '#/components/schemas/Organization'
          maxItems: 1000
          type: array
      required:
      - data
      - metadata
      type: object
    UserProfile:
      example:
        id: id
        given_name: given_name
        family_name: family_name
        email: email
        picture: picture
      properties:
        id:
          description: Unique identifier for the user
          type: string
        email:
          description: Email address of the user
          type: string
        given_name:
          description: Given name of the user
          type: string
        family_name:
          description: Family name of the user
          type: string
        picture:
          description: Profile picture URL
          type: string
      required:
      - email
      - id
      type: object
    UserProfileResponse:
      example:
        data:
          id: id
          given_name: given_name
          family_name: family_name
          email: email
          picture: picture
      properties:
        data:
          $ref: '#/components/schemas/UserProfile'
      required:
      - data
      type: object
    CurrentOrganizationResponse:
      example:
        data:
          code: code
          name: name
          id: id
      properties:
        data:
          $ref: '#/components/schemas/Organization'
      required:
      - data
      type: object
    EntitlementsResponse_data:
      example:
        entitlements:
        - fixed_charge: 0.8008281904610115
          feature_name: feature_name
          price_name: price_name
          entitlement_limit_min: 5.962133916683182
          feature_key: feature_key
          id: id
          unit_amount: 6.027456183070403
          entitlement_limit_max: 1.4658129805029452
        - fixed_charge: 0.8008281904610115
          feature_name: feature_name
          price_name: price_name
          entitlement_limit_min: 5.962133916683182
          feature_key: feature_key
          id: id
          unit_amount: 6.027456183070403
          entitlement_limit_max: 1.4658129805029452
        - fixed_charge: 0.8008281904610115
          feature_name: feature_name
          price_name: price_name
          entitlement_limit_min: 5.962133916683182
          feature_key: feature_key
          id: id
          unit_amount: 6.027456183070403
          entitlement_limit_max: 1.4658129805029452
        - fixed_charge: 0.8008281904610115
          feature_name: feature_name
          price_name: price_name
          entitlement_limit_min: 5.962133916683182
          feature_key: feature_key
          id: id
          unit_amount: 6.027456183070403
          entitlement_limit_max: 1.4658129805029452
        - fixed_charge: 0.8008281904610115
          feature_name: feature_name
          price_name: price_name
          entitlement_limit_min: 5.962133916683182
          feature_key: feature_key
          id: id
          unit_amount: 6.027456183070403
          entitlement_limit_max: 1.4658129805029452
        plans:
        - key: key
          subscribed_on: 2000-01-23T04:56:07.000+00:00
        - key: key
          subscribed_on: 2000-01-23T04:56:07.000+00:00
        - key: key
          subscribed_on: 2000-01-23T04:56:07.000+00:00
        - key: key
          subscribed_on: 2000-01-23T04:56:07.000+00:00
        - key: key
          subscribed_on: 2000-01-23T04:56:07.000+00:00
        org_code: org_code
      properties:
        org_code:
          description: Organization code
          type: string
        plans:
          items:
            $ref: '#/components/schemas/Plan'
          maxItems: 1000
          type: array
        entitlements:
          items:
            $ref: '#/components/schemas/Entitlement'
          maxItems: 1000
          type: array
      required:
      - entitlements
      - org_code
      - plans
      type: object
    EntitlementResponse_data:
      example:
        entitlement:
          fixed_charge: 0.8008281904610115
          feature_name: feature_name
          price_name: price_name
          entitlement_limit_min: 5.962133916683182
          feature_key: feature_key
          id: id
          unit_amount: 6.027456183070403
          entitlement_limit_max: 1.4658129805029452
        org_code: org_code
      properties:
        org_code:
          description: Organization code
          type: string
        entitlement:
          $ref: '#/components/schemas/Entitlement'
      required:
      - entitlement
      - org_code
      type: object
    FeatureFlag_value:
      description: Value of the feature flag
      oneOf:
      - type: string
      - type: boolean
      - type: number
      - type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

