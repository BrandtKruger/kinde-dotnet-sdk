/*
 * Kinde Management API
 *
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Kinde.Api.Client.FileParameter;
using OpenAPIDateConverter = Kinde.Api.Client.OpenAPIDateConverter;

namespace Kinde.Api.Model
{
    /// <summary>
    /// AddAPIsRequest
    /// </summary>
    [DataContract(Name = "addAPIs_request")]
    public partial class AddAPIsRequest : IEquatable<AddAPIsRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddAPIsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AddAPIsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AddAPIsRequest" /> class.
        /// </summary>
        /// <param name="name">The name of the API. (1-64 characters). (required).</param>
        /// <param name="audience">A unique identifier for the API - commonly the URL. This value will be used as the &#x60;audience&#x60; parameter in authorization claims. (1-64 characters) (required).</param>
        public AddAPIsRequest(string name = default(string), string audience = default(string))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for AddAPIsRequest and cannot be null");
            }
            this.Name = name;
            // to ensure "audience" is required (not null)
            if (audience == null)
            {
                throw new ArgumentNullException("audience is a required property for AddAPIsRequest and cannot be null");
            }
            this.Audience = audience;
        }

        /// <summary>
        /// The name of the API. (1-64 characters).
        /// </summary>
        /// <value>The name of the API. (1-64 characters).</value>
        /// <example>Example API</example>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// A unique identifier for the API - commonly the URL. This value will be used as the &#x60;audience&#x60; parameter in authorization claims. (1-64 characters)
        /// </summary>
        /// <value>A unique identifier for the API - commonly the URL. This value will be used as the &#x60;audience&#x60; parameter in authorization claims. (1-64 characters)</value>
        /// <example>https://api.example.com</example>
        [DataMember(Name = "audience", IsRequired = true, EmitDefaultValue = true)]
        public string Audience { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AddAPIsRequest {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Audience: ").Append(Audience).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AddAPIsRequest);
        }

        /// <summary>
        /// Returns true if AddAPIsRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of AddAPIsRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AddAPIsRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Audience == input.Audience ||
                    (this.Audience != null &&
                    this.Audience.Equals(input.Audience))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.Audience != null)
                {
                    hashCode = (hashCode * 59) + this.Audience.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
