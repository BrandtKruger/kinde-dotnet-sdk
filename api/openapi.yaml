openapi: 3.0.0
info:
  contact:
    email: support@kinde.com
    name: Kinde Support Team
    url: https://docs.kinde.com
  description: |2

    Provides endpoints to manage your Kinde Businesses.

    ## Intro

    ## How to use

    1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).

    2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)

    3. Test request any endpoint using the test token
  termsOfService: https://docs.kinde.com/trust-center/agreements/terms-of-service/
  title: Kinde Management API
  version: "1"
servers:
- url: "https://{subdomain}.kinde.com"
  variables:
    subdomain:
      default: your_kinde_subdomain
      description: The subdomain generated for your business on Kinde.
tags:
- name: APIs
  x-displayName: APIs
- name: Applications
  x-displayName: Applications
- name: Business
  x-displayName: Business
- name: Industries
  x-displayName: Industries
- name: Timezones
  x-displayName: Timezones
- name: Callbacks
  x-displayName: Callbacks
- name: Connected Apps
  x-displayName: Connected Apps
- name: Connections
  x-displayName: Connections
- name: Environments
  x-displayName: Environments
- name: Environment variables
  x-displayName: Environment variables
- name: Feature Flags
  x-displayName: Feature Flags
- name: Identities
  x-displayName: Identities
- name: MFA
  x-displayName: MFA
- name: Organizations
  x-displayName: Organizations
- name: Permissions
  x-displayName: Permissions
- name: Properties
  x-displayName: Properties
- name: Property Categories
  x-displayName: Property Categories
- name: Roles
  x-displayName: Roles
- name: Subscribers
  x-displayName: Subscribers
- name: Users
  x-displayName: Users
- name: Webhooks
  x-displayName: Webhooks
- name: OAuth
  x-displayName: OAuth
paths:
  /api/v1/apis:
    get:
      description: |
        Returns a list of your APIs. The APIs are returned sorted by name.

        <div>
          <code>read:apis</code>
        </div>
      operationId: getAPIs
      parameters:
      - description: Specify additional data to retrieve. Use "scopes".
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - scopes
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_apis_response'
          description: A list of APIs.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get APIs
      tags:
      - APIs
    post:
      description: |
        Register a new API. For more information read [Register and manage APIs](https://docs.kinde.com/developer-tools/your-apis/register-manage-apis/).

        <div>
          <code>create:apis</code>
        </div>
      externalDocs:
        description: Register and manage APIs
        url: https://docs.kinde.com/developer-tools/your-apis/register-manage-apis
      operationId: addAPIs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAPIs_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_apis_response'
          description: APIs successfully updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create API
      tags:
      - APIs
  /api/v1/apis/{api_id}:
    delete:
      description: |
        Delete an API you previously created.

        <div>
          <code>delete:apis</code>
        </div>
      operationId: deleteAPI
      parameters:
      - description: The API's ID.
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 7ccd126599aa422a771abcb341596881
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delete_api_response'
          description: API successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete API
      tags:
      - APIs
    get:
      description: |
        Retrieve API details by ID.

        <div>
          <code>read:apis</code>
        </div>
      operationId: getAPI
      parameters:
      - description: The API's ID.
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 7ccd126599aa422a771abcb341596881
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_api_response'
          description: API successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get API
      tags:
      - APIs
  /api/v1/apis/{api_id}/scopes:
    get:
      description: |
        Retrieve API scopes by API ID.

        <div>
          <code>read:api_scopes</code>
        </div>
      operationId: getAPIScopes
      parameters:
      - description: API ID
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 838f208d006a482dbd8cdb79a9889f68
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_api_scopes_response'
          description: API scopes successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get API scopes
      tags:
      - APIs
    post:
      description: |
        Create a new API scope.

        <div>
          <code>create:api_scopes</code>
        </div>
      operationId: addAPIScope
      parameters:
      - description: API ID
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 838f208d006a482dbd8cdb79a9889f68
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAPIScope_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_api_scopes_response'
          description: API scopes successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create API scope
      tags:
      - APIs
  /api/v1/apis/{api_id}/scopes/{scope_id}:
    delete:
      description: |
        Delete an API scope you previously created.

        <div>
          <code>delete:apis_scopes</code>
        </div>
      operationId: deleteAPIScope
      parameters:
      - description: API ID
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 838f208d006a482dbd8cdb79a9889f68
          nullable: false
          type: string
        style: simple
      - description: Scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          example: api_scope_019391daf58d87d8a7213419c016ac95
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          description: API scope successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete API scope
      tags:
      - APIs
    get:
      description: |
        Retrieve API scope by API ID.

        <div>
          <code>read:api_scopes</code>
        </div>
      operationId: getAPIScope
      parameters:
      - description: API ID
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 838f208d006a482dbd8cdb79a9889f68
          nullable: false
          type: string
        style: simple
      - description: Scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          example: api_scope_019391daf58d87d8a7213419c016ac95
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_api_scope_response'
          description: API scope successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get API scope
      tags:
      - APIs
    patch:
      description: |
        Update an API scope.

        <div>
          <code>update:api_scopes</code>
        </div>
      operationId: updateAPIScope
      parameters:
      - description: API ID
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 838f208d006a482dbd8cdb79a9889f68
          nullable: false
          type: string
        style: simple
      - description: Scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          example: api_scope_019391daf58d87d8a7213419c016ac95
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAPIScope_request'
        required: true
      responses:
        "200":
          description: API scope successfully updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update API scope
      tags:
      - APIs
  /api/v1/apis/{api_id}/applications:
    patch:
      description: |
        Authorize applications to be allowed to request access tokens for an API

        <div>
          <code>update:apis</code>
        </div>
      operationId: updateAPIApplications
      parameters:
      - description: The API's ID.
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 7ccd126599aa422a771abcb341596881
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAPIApplications_request'
        description: The applications you want to authorize.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorize_app_api_response'
          description: Authorized applications updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Authorize API applications
      tags:
      - APIs
  /api/v1/apis/{api_id}/applications/{application_id}/scopes/{scope_id}:
    delete:
      description: |
        Delete an API application scope you previously created.

        <div>
          <code>delete:apis_application_scopes</code>
        </div>
      operationId: deleteAPIAppliationScope
      parameters:
      - description: API ID
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 838f208d006a482dbd8cdb79a9889f68
          nullable: false
          type: string
        style: simple
      - description: Application ID
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          example: 7643b487c97545aab79257fd13a1085a
          nullable: false
          type: string
        style: simple
      - description: Scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          example: api_scope_019391daf58d87d8a7213419c016ac95
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          description: API scope successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete API application scope
      tags:
      - APIs
    post:
      description: |
        Add a scope to an API application.

        <div>
          <code>create:api_application_scopes</code>
        </div>
      operationId: addAPIApplicationScope
      parameters:
      - description: API ID
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 838f208d006a482dbd8cdb79a9889f68
          nullable: false
          type: string
        style: simple
      - description: Application ID
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          example: 7643b487c97545aab79257fd13a1085a
          nullable: false
          type: string
        style: simple
      - description: Scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          example: api_scope_019391daf58d87d8a7213419c016ac95
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          description: API scope successfully added to API application
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Add scope to API application
      tags:
      - APIs
  /api/v1/applications:
    get:
      description: |
        Get a list of applications / clients.

        <div>
          <code>read:applications</code>
        </div>
      operationId: getApplications
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_applications_response'
          description: A successful response with a list of applications or an empty
            list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get applications
      tags:
      - Applications
    post:
      description: |
        Create a new client.

        <div>
          <code>create:applications</code>
        </div>
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createApplication_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_application_response'
          description: Application successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create application
      tags:
      - Applications
  /api/v1/applications/{application_id}:
    delete:
      description: |
        Delete a client / application.

        <div>
          <code>delete:applications</code>
        </div>
      operationId: deleteApplication
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          example: 20bbffaa4c5e492a962273039d4ae18b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Application successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete application
      tags:
      - Applications
    get:
      description: |
        Gets an application given the application's ID.

        <div>
          <code>read:applications</code>
        </div>
      operationId: getApplication
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          example: 20bbffaa4c5e492a962273039d4ae18b
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_application_response'
          description: Application successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get application
      tags:
      - Applications
    patch:
      description: |
        Updates a client's settings. For more information, read [Applications in Kinde](https://docs.kinde.com/build/applications/about-applications)

        <div>
          <code>update:applications</code>
        </div>
      operationId: updateApplication
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          example: 20bbffaa4c5e492a962273039d4ae18b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateApplication_request'
        description: Application details.
        required: false
      responses:
        "200":
          description: Application successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Application
      tags:
      - Applications
  /api/v1/applications/{application_id}/connections:
    get:
      description: |
        Gets all connections for an application.

        <div>
          <code>read:application_connections</code>
        </div>
      operationId: GetApplicationConnections
      parameters:
      - description: The identifier/client ID for the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          example: 20bbffaa4c5e492a962273039d4ae18b
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_connections_response'
          description: Application connections successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get connections
      tags:
      - Applications
  /api/v1/applications/{application_id}/connections/{connection_id}:
    delete:
      description: |
        Turn off an auth connection for an application

        <div>
          <code>delete:application_connections</code>
        </div>
      operationId: RemoveConnection
      parameters:
      - description: The identifier/client ID for the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          example: 20bbffaa4c5e492a962273039d4ae18b
          type: string
        style: simple
      - description: The identifier for the connection.
        explode: false
        in: path
        name: connection_id
        required: true
        schema:
          example: conn_0192c16abb53b44277e597d31877ba5b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Connection successfully removed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Remove connection
      tags:
      - Applications
    post:
      description: |
        Enable an auth connection for an application.

        <div>
          <code>create:application_connections</code>
        </div>
      operationId: EnableConnection
      parameters:
      - description: The identifier/client ID for the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          example: 20bbffaa4c5e492a962273039d4ae18b
          type: string
        style: simple
      - description: The identifier for the connection.
        explode: false
        in: path
        name: connection_id
        required: true
        schema:
          example: conn_0192c16abb53b44277e597d31877ba5b
          type: string
        style: simple
      responses:
        "200":
          description: Connection successfully enabled.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Enable connection
      tags:
      - Applications
  /api/v1/applications/{application_id}/properties:
    get:
      description: |
        Gets properties for an application by client ID.

        <div>
          <code>read:application_properties</code>
        </div>
      operationId: getApplicationPropertyValues
      parameters:
      - description: The application's ID / client ID.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          example: 3b0b5c6c8fcc464fab397f4969b5f482
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_property_values_response'
          description: Properties successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get property values
      tags:
      - Applications
  /api/v1/applications/{application_id}/properties/{property_key}:
    put:
      description: |
        Update application property value.

        <div>
          <code>update:application_properties</code>
        </div>
      operationId: updateApplicationsProperty
      parameters:
      - description: The application's ID / client ID.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          example: 3b0b5c6c8fcc464fab397f4969b5f482
          type: string
        style: simple
      - description: The property's key.
        explode: false
        in: path
        name: property_key
        required: true
        schema:
          example: kp_some_key
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateApplicationsProperty_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Property successfully updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update property
      tags:
      - Applications
  /api/v1/applications/{application_id}/tokens:
    patch:
      description: |
        Configure tokens for an application.
          <div>
            <code>update:application_tokens</code>
          </div>
      operationId: updateApplicationTokens
      parameters:
      - description: The identifier/client ID for the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          example: 20bbffaa4c5e492a962273039d4ae18b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateApplicationTokens_request'
        description: Application tokens.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Application tokens succesfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update application tokens
      tags:
      - Applications
  /api/v1/business:
    get:
      description: |
        Get your business details.

        <div>
          <code>read:businesses</code>
        </div>
      operationId: getBusiness
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_business_response'
          description: Your business details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get business
      tags:
      - Business
    patch:
      description: |
        Update your business details.

        <div>
          <code>update:businesses</code>
        </div>
      operationId: updateBusiness
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateBusiness_request'
        description: The business details to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Business successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update business
      tags:
      - Business
  /api/v1/industries:
    get:
      description: |
        Get a list of industries and associated industry keys.

        <div>
          <code>read:industries</code>
        </div>
      operationId: getIndustries
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_industries_response'
          description: A list of industries.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get industries
      tags:
      - Industries
  /api/v1/timezones:
    get:
      description: |
        Get a list of timezones and associated timezone keys.

        <div>
          <code>read:timezones</code>
        </div>
      operationId: getTimezones
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_timezones_response'
          description: A list of timezones.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get timezones
      tags:
      - Timezones
  /api/v1/applications/{app_id}/auth_redirect_urls:
    delete:
      description: |
        Delete callback URLs.

        <div>
          <code>delete:applications_redirect_uris</code>
        </div>
      operationId: deleteCallbackURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Urls to delete, comma separated and url encoded."
        explode: true
        in: query
        name: urls
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Callback URLs successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Callback URLs
      tags:
      - Callbacks
    get:
      description: |
        Returns an application's redirect callback URLs.

        <div>
          <code>read:applications_redirect_uris</code>
        </div>
      operationId: getCallbackURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirect_callback_urls'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/redirect_callback_urls'
          description: Callback URLs successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List Callback URLs
      tags:
      - Callbacks
    post:
      description: |
        Add additional redirect callback URLs.

        <div>
          <code>create:applications_redirect_uris</code>
        </div>
      operationId: addRedirectCallbackURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceRedirectCallbackURLs_request'
        description: Callback details.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Callbacks successfully updated
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Add Redirect Callback URLs
      tags:
      - Callbacks
    put:
      description: |
        Replace all redirect callback URLs.

        <div>
          <code>update:applications_redirect_uris</code>
        </div>
      operationId: replaceRedirectCallbackURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceRedirectCallbackURLs_request'
        description: Callback details.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Callbacks successfully updated
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Replace Redirect Callback URLs
      tags:
      - Callbacks
  /api/v1/applications/{app_id}/auth_logout_urls:
    delete:
      description: |
        Delete logout URLs.

        <div>
          <code>delete:application_logout_uris</code>
        </div>
      operationId: deleteLogoutURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Urls to delete, comma separated and url encoded."
        explode: true
        in: query
        name: urls
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Logout URLs successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Logout URLs
      tags:
      - Callbacks
    get:
      description: |
        Returns an application's logout redirect URLs.

        <div>
          <code>read:application_logout_uris</code>
        </div>
      operationId: getLogoutURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logout_redirect_urls'
          description: Logout URLs successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List logout URLs
      tags:
      - Callbacks
    post:
      description: |
        Add additional logout redirect URLs.

        <div>
          <code>create:application_logout_uris</code>
        </div>
      operationId: addLogoutRedirectURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceLogoutRedirectURLs_request'
        description: Callback details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Logout URLs successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Add logout redirect URLs
      tags:
      - Callbacks
    put:
      description: |
        Replace all logout redirect URLs.

        <div>
          <code>update:application_logout_uris</code>
        </div>
      operationId: replaceLogoutRedirectURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceLogoutRedirectURLs_request'
        description: Callback details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Logout URLs successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Replace logout redirect URls
      tags:
      - Callbacks
  /api/v1/connected_apps/auth_url:
    get:
      description: |
        Get a URL that authenticates and authorizes a user to a third-party connected app.

        <div>
          <code>read:connected_apps</code>
        </div>
      operationId: GetConnectedAppAuthUrl
      parameters:
      - description: The unique key code reference of the connected app to authenticate
          against.
        explode: true
        in: query
        name: key_code_ref
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: The id of the user that needs to authenticate to the third-party
          connected app.
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          nullable: false
          type: string
        style: form
      - description: The code of the Kinde organization that needs to authenticate
          to the third-party connected app.
        explode: true
        in: query
        name: org_code
        required: false
        schema:
          nullable: false
          type: string
        style: form
      - description: A URL that overrides the default callback URL setup in your connected
          app configuration
        explode: true
        in: query
        name: override_callback_url
        required: false
        schema:
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connected_apps_auth_url'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/connected_apps_auth_url'
          description: A URL that can be used to authenticate and a session id to
            identify this authentication session.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error retrieving connected app auth url.
        "403":
          description: Invalid credentials.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error retrieving connected app auth url.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get Connected App URL
      tags:
      - Connected Apps
  /api/v1/connected_apps/token:
    get:
      description: |
        Get an access token that can be used to call the third-party provider linked to the connected app.

        <div>
          <code>read:connected_apps</code>
        </div>
      operationId: GetConnectedAppToken
      parameters:
      - description: The unique sesssion id representing the login session of a user.
        explode: true
        in: query
        name: session_id
        required: true
        schema:
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connected_apps_access_token'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/connected_apps_access_token'
          description: "An access token that can be used to query a third-party provider,\
            \ as well as the token's expiry time."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: The session id provided points to an invalid session.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get Connected App Token
      tags:
      - Connected Apps
  /api/v1/connected_apps/revoke:
    post:
      description: |
        Revoke the tokens linked to the connected app session.

        <div>
          <code>create:connected_apps</code>
        </div>
      operationId: RevokeConnectedAppToken
      parameters:
      - description: The unique sesssion id representing the login session of a user.
        explode: true
        in: query
        name: session_id
        required: true
        schema:
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: "An access token that can be used to query a third-party provider,\
            \ as well as the token's expiry time."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "405":
          description: Invalid HTTP method used.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Revoke Connected App Token
      tags:
      - Connected Apps
  /api/v1/connections:
    get:
      description: |
        Returns a list of Connections

        <div>
          <code>read:connections</code>
        </div>
      operationId: GetConnections
      parameters:
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: The ID of the connection to start after.
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The ID of the connection to end before.
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_connections_response'
            application/json:
              schema:
                $ref: '#/components/schemas/get_connections_response'
          description: Connections successfully retrieved.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List Connections
      tags:
      - Connections
    post:
      description: |
        Create Connection.

        <div>
          <code>create:connections</code>
        </div>
      operationId: CreateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnection_request'
        description: Connection details.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_connection_response'
          description: Connection successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create Connection
      tags:
      - Connections
  /api/v1/connections/{connection_id}:
    delete:
      description: |
        Delete connection.

        <div>
          <code>delete:connections</code>
        </div>
      operationId: deleteConnection
      parameters:
      - description: The identifier for the connection.
        explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Connection successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_response'
          description: The specified resource was not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Connection
      tags:
      - Connections
    get:
      description: |
        Get Connection.

        <div>
          <code>read:connections</code>
        </div>
      operationId: GetConnection
      parameters:
      - description: The unique identifier for the connection.
        explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
          description: Connection successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get Connection
      tags:
      - Connections
    patch:
      description: |
        Update Connection.

        <div>
          <code>update:connections</code>
        </div>
      operationId: UpdateConnection
      parameters:
      - description: The unique identifier for the connection.
        explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnection_request'
        description: The fields of the connection to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Connection successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_response'
          description: The specified resource was not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Connection
      tags:
      - Connections
    put:
      description: |
        Replace Connection Config.

        <div>
          <code>update:connections</code>
        </div>
      operationId: ReplaceConnection
      parameters:
      - description: The unique identifier for the connection.
        explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceConnection_request'
        description: The complete connection configuration to replace the existing
          one.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Connection successfully updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_response'
          description: The specified resource was not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Replace Connection
      tags:
      - Connections
  /api/v1/environment:
    get:
      description: |
        Get's the current environment.

        <div>
          <code>read:environments</code>
        </div>
      operationId: getEnvironment
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_environment_response'
          description: Environment successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get environment
      tags:
      - Environments
  /api/v1/environment/feature_flags:
    delete:
      description: |
        Delete all environment feature flag overrides.

        <div>
          <code>delete:environment_feature_flags</code>
        </div>
      operationId: DeleteEnvironementFeatureFlagOverrides
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag overrides deleted successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Environment Feature Flag Overrides
      tags:
      - Environments
    get:
      description: |
        Get environment feature flags.

        <div>
          <code>read:environment_feature_flags</code>
        </div>
      operationId: GetEnvironementFeatureFlags
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_environment_feature_flags_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_environment_feature_flags_response'
          description: Feature flags retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List Environment Feature Flags
      tags:
      - Environments
  /api/v1/environment/feature_flags/{feature_flag_key}:
    delete:
      description: |
        Delete environment feature flag override.

        <div>
          <code>delete:environment_feature_flags</code>
        </div>
      operationId: DeleteEnvironementFeatureFlagOverride
      parameters:
      - description: The identifier for the feature flag.
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag deleted successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Environment Feature Flag Override
      tags:
      - Environments
    patch:
      description: |
        Update environment feature flag override.

        <div>
          <code>update:environment_feature_flags</code>
        </div>
      operationId: UpdateEnvironementFeatureFlagOverride
      parameters:
      - description: The identifier for the feature flag.
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironementFeatureFlagOverride_request'
        description: Flag details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag override successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Environment Feature Flag Override
      tags:
      - Environments
  /api/v1/environment_variables:
    get:
      description: |
        Get environment variables. This feature is in beta and admin UI is not yet available.

        <div>
          <code>read:environment_variables</code>
        </div>
      operationId: getEnvironmentVariables
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_environment_variables_response'
          description: A successful response with a list of environment variables
            or an empty list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get environment variables
      tags:
      - Environment variables
    post:
      description: |
        Create a new environment variable. This feature is in beta and admin UI is not yet available.

        <div>
          <code>create:environment_variables</code>
        </div>
      operationId: createEnvironmentVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEnvironmentVariable_request'
        description: The environment variable details.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_environment_variable_response'
          description: Environment variable successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create environment variable
      tags:
      - Environment variables
  /api/v1/environment_variables/{variable_id}:
    delete:
      description: |
        Delete an environment variable you previously created. This feature is in beta and admin UI is not yet available.

        <div>
          <code>delete:environment_variables</code>
        </div>
      operationId: deleteEnvironmentVariable
      parameters:
      - description: The environment variable's ID.
        explode: false
        in: path
        name: variable_id
        required: true
        schema:
          example: env_var_0192b1941f125645fa15bf28a662a0b3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delete_environment_variable_response'
          description: Environment variable successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete environment variable
      tags:
      - Environment variables
    get:
      description: |
        Retrieve environment variable details by ID. This feature is in beta and admin UI is not yet available.

        <div>
          <code>read:environment_variables</code>
        </div>
      operationId: getEnvironmentVariable
      parameters:
      - description: The environment variable's ID.
        explode: false
        in: path
        name: variable_id
        required: true
        schema:
          example: env_var_0192b1941f125645fa15bf28a662a0b3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_environment_variable_response'
          description: Environment variable successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get environment variable
      tags:
      - Environment variables
    patch:
      description: |
        Update an environment variable you previously created. This feature is in beta and admin UI is not yet available.

        <div>
          <code>update:environment_variables</code>
        </div>
      operationId: updateEnvironmentVariable
      parameters:
      - description: The environment variable's ID.
        explode: false
        in: path
        name: variable_id
        required: true
        schema:
          example: env_var_0192b1941f125645fa15bf28a662a0b3
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateEnvironmentVariable_request'
        description: The new details for the environment variable
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update_environment_variable_response'
          description: Environment variable successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update environment variable
      tags:
      - Environment variables
  /api/v1/feature_flags:
    post:
      description: |
        Create feature flag.

        <div>
          <code>create:feature_flags</code>
        </div>
      operationId: CreateFeatureFlag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeatureFlag_request'
        description: Flag details.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create Feature Flag
      tags:
      - Feature Flags
  /api/v1/feature_flags/{feature_flag_key}:
    delete:
      description: |
        Delete feature flag

        <div>
          <code>delete:feature_flags</code>
        </div>
      operationId: DeleteFeatureFlag
      parameters:
      - description: The identifier for the feature flag.
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Feature Flag
      tags:
      - Feature Flags
    put:
      description: |
        Update feature flag.

        <div>
          <code>update:feature_flags</code>
        </div>
      operationId: UpdateFeatureFlag
      parameters:
      - description: The key identifier for the feature flag.
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the flag.
        explode: true
        in: query
        name: name
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: Description of the flag purpose.
        explode: true
        in: query
        name: description
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: The variable type
        explode: true
        in: query
        name: type
        required: true
        schema:
          enum:
          - str
          - int
          - bool
          nullable: false
          type: string
        style: form
      - description: Allow the flag to be overridden at a different level.
        explode: true
        in: query
        name: allow_override_level
        required: true
        schema:
          enum:
          - env
          - org
          nullable: false
          type: string
        style: form
      - description: Default value for the flag used by environments and organizations.
        explode: true
        in: query
        name: default_value
        required: true
        schema:
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Replace Feature Flag
      tags:
      - Feature Flags
  /api/v1/identities/{identity_id}:
    delete:
      description: |
        Delete identity by ID.

        <div>
          <code>delete:identities</code>
        </div>
      operationId: DeleteIdentity
      parameters:
      - description: The unique identifier for the identity.
        explode: false
        in: path
        name: identity_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Identity successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete identity
      tags:
      - Identities
    get:
      description: |
        Returns an identity by ID

        <div>
          <code>read:identities</code>
        </div>
      operationId: GetIdentity
      parameters:
      - description: The unique identifier for the identity.
        explode: false
        in: path
        name: identity_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/identity'
            application/json:
              schema:
                $ref: '#/components/schemas/identity'
          description: Identity successfully retrieved.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get identity
      tags:
      - Identities
    patch:
      description: |
        Update identity by ID.

        <div>
          <code>update:identities</code>
        </div>
      operationId: UpdateIdentity
      parameters:
      - description: The unique identifier for the identity.
        explode: false
        in: path
        name: identity_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIdentity_request'
        description: The fields of the identity to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Identity successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update identity
      tags:
      - Identities
  /api/v1/mfa:
    put:
      description: |
        Replace MFA Configuration.

        <div>
          <code>update:mfa</code>
        </div>
      operationId: ReplaceMFA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceMFA_request'
        description: MFA details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: MFA Configuration updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Replace MFA Configuration
      tags:
      - MFA
  /api/v1/organization:
    get:
      description: |
        Retrieve organization details by code.

        <div>
          <code>read:organizations</code>
        </div>
      operationId: getOrganization
      parameters:
      - description: The organization's code.
        explode: true
        in: query
        name: code
        required: false
        schema:
          example: org_1ccfb819462
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organization_response'
          description: Organization successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get organization
      tags:
      - Organizations
    post:
      description: |
        Create a new organization. To learn more read about [multi tenancy using organizations](https://docs.kinde.com/build/organizations/multi-tenancy-using-organizations/)

        <div>
          <code>create:organizations</code>
        </div>
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrganization_request'
        description: Organization details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_organization_response'
          description: Organization successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create organization
      tags:
      - Organizations
  /api/v1/organizations:
    get:
      description: |
        Get a list of organizations.

        <div>
          <code>read:organizations</code>
        </div>
      operationId: getOrganizations
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - email_asc
          - email_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organizations_response'
          description: Organizations successfully retreived.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get organizations
      tags:
      - Organizations
  /api/v1/organization/{org_code}:
    delete:
      description: |
        Delete an organization.

        <div>
          <code>delete:organizations</code>
        </div>
      operationId: deleteOrganization
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Organization successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_response'
          description: The specified resource was not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Organization
      tags:
      - Organizations
    patch:
      description: |
        Update an organization.

        <div>
          <code>update:organizations</code>
        </div>
      operationId: updateOrganization
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          example: org_1ccfb819462
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganization_request'
        description: Organization details.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Organization successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Organization
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/users:
    get:
      description: |
        Get user details for all members of an organization.

        <div>
          <code>read:organization_users</code>
        </div>
      operationId: GetOrganizationUsers
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - email_asc
          - email_desc
          - id_asc
          - id_desc
          example: email_asc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          example: 10
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          example: MTo6OmlkX2FzYw==
          nullable: true
          type: string
        style: form
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          example: org_1ccfb819462
          nullable: false
          type: string
        style: simple
      - description: Filter by user permissions comma separated (where all match)
        explode: true
        in: query
        name: permissions
        required: false
        schema:
          example: admin
          type: string
        style: form
      - description: Filter by user roles comma separated (where all match)
        explode: true
        in: query
        name: roles
        required: false
        schema:
          example: manager
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organization_users_response'
          description: A successful response with a list of organization users or
            an empty list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get organization users
      tags:
      - Organizations
    patch:
      description: |
        Update users that belong to an organization.

        <div>
          <code>update:organization_users</code>
        </div>
      operationId: UpdateOrganizationUsers
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationUsers_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update_organization_users_response'
          description: Users successfully removed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Organization Users
      tags:
      - Organizations
    post:
      description: |
        Add existing users to an organization.

        <div>
          <code>create:organization_users</code>
        </div>
      operationId: AddOrganizationUsers
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrganizationUsers_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_organization_users_response'
          description: Users successfully added.
        "204":
          description: No users added.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Add Organization Users
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/users/{user_id}/roles:
    get:
      description: |
        Get roles for an organization user.

        <div>
          <code>read:organization_user_roles</code>
        </div>
      operationId: GetOrganizationUserRoles
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The user's id.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organizations_user_roles_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_organizations_user_roles_response'
          description: A successful response with a list of user roles.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List Organization User Roles
      tags:
      - Organizations
    post:
      description: |
        Add role to an organization user.

        <div>
          <code>create:organization_user_roles</code>
        </div>
      operationId: CreateOrganizationUserRole
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The user's id.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationUserRole_request'
        description: Role details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Role successfully added.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Add Organization User Role
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/users/{user_id}/roles/{role_id}:
    delete:
      description: |
        Delete role for an organization user.

        <div>
          <code>delete:organization_user_roles</code>
        </div>
      operationId: DeleteOrganizationUserRole
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The user's id.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The role id.
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User successfully removed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error creating user.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Organization User Role
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/users/{user_id}/permissions:
    get:
      description: |
        Get permissions for an organization user.

        <div>
          <code>read:organization_user_permissions</code>
        </div>
      operationId: GetOrganizationUserPermissions
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The user's id.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: Specify additional data to retrieve. Use "roles".
        explode: true
        in: query
        name: expand
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organizations_user_permissions_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_organizations_user_permissions_response'
          description: A successful response with a list of user permissions.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List Organization User Permissions
      tags:
      - Organizations
    post:
      description: |
        Add permission to an organization user.

        <div>
          <code>create:organization_user_permissions</code>
        </div>
      operationId: CreateOrganizationUserPermission
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The user's id.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationUserPermission_request'
        description: Permission details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User permission successfully updated.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Add Organization User Permission
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/users/{user_id}/permissions/{permission_id}:
    delete:
      description: |
        Delete permission for an organization user.

        <div>
          <code>delete:organization_user_permissions</code>
        </div>
      operationId: DeleteOrganizationUserPermission
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The user's id.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The permission id.
        explode: false
        in: path
        name: permission_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User successfully removed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error creating user.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Organization User Permission
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/users/{user_id}:
    delete:
      description: |
        Remove user from an organization.

        <div>
          <code>delete:organization_users</code>
        </div>
      operationId: RemoveOrganizationUser
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The user's id.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User successfully removed from organization
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error removing user
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Remove Organization User
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/users/{user_id}/apis/{api_id}/scopes/{scope_id}:
    delete:
      description: |
        Delete a scope from an organization user api you previously created.

        <div>
          <code>delete:organization_user_api_scopes</code>
        </div>
      operationId: deleteOrganizationUserAPIScope
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          example: kp_5ce676e5d6a24bc9aac2fba35a46e958
          nullable: false
          type: string
        style: simple
      - description: API ID
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 838f208d006a482dbd8cdb79a9889f68
          nullable: false
          type: string
        style: simple
      - description: Scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          example: api_scope_019391daf58d87d8a7213419c016ac95
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          description: Organization user API scope successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete scope from organization user API
      tags:
      - Organizations
    post:
      description: |
        Add a scope to an organization user api.

        <div>
          <code>create:organization_user_api_scopes</code>
        </div>
      operationId: addOrganizationUserAPIScope
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          example: kp_5ce676e5d6a24bc9aac2fba35a46e958
          nullable: false
          type: string
        style: simple
      - description: API ID
        explode: false
        in: path
        name: api_id
        required: true
        schema:
          example: 838f208d006a482dbd8cdb79a9889f68
          nullable: false
          type: string
        style: simple
      - description: Scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          example: api_scope_019391daf58d87d8a7213419c016ac95
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          description: API scope successfully added to organization user api
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Add scope to organization user api
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/users/{user_id}/mfa:
    get:
      description: |
        Get an organization user’s MFA configuration.

        <div>
          <code>read:organization_user_mfa</code>
        </div>
      operationId: GetOrgUserMFA
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          example: org_1ccfb819462
          type: string
        style: simple
      - description: The identifier for the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          example: kp_c3143a4b50ad43c88e541d9077681782
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_user_mfa_response'
          description: Successfully retrieve user's MFA configuration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_response'
          description: The specified resource was not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get an organization user's MFA configuration
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/users/{user_id}/mfa/{factor_id}:
    delete:
      description: |
        Reset an organization user’s MFA.

        <div>
          <code>delete:organization_user_mfa</code>
        </div>
      operationId: ResetOrgUserMFA
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          example: org_1ccfb819462
          type: string
        style: simple
      - description: The identifier for the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          example: kp_c3143a4b50ad43c88e541d9077681782
          type: string
        style: simple
      - description: The identifier for the MFA factor
        explode: false
        in: path
        name: factor_id
        required: true
        schema:
          example: mfa_0193278a00ac29b3f6d4e4d462d55c47
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User's MFA successfully reset.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_response'
          description: The specified resource was not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Reset MFA for a user
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/feature_flags:
    delete:
      description: |
        Delete all organization feature flag overrides.

        <div>
          <code>delete:organization_feature_flags</code>
        </div>
      operationId: DeleteOrganizationFeatureFlagOverrides
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag overrides successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Organization Feature Flag Overrides
      tags:
      - Organizations
    get:
      description: |
        Get all organization feature flags.

        <div>
          <code>read:organization_feature_flags</code>
        </div>
      operationId: GetOrganizationFeatureFlags
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organization_feature_flags_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_organization_feature_flags_response'
          description: Feature flag overrides successfully returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List Organization Feature Flags
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/feature_flags/{feature_flag_key}:
    delete:
      description: |
        Delete organization feature flag override.

        <div>
          <code>delete:organization_feature_flags</code>
        </div>
      operationId: DeleteOrganizationFeatureFlagOverride
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier for the feature flag.
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag override successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Organization Feature Flag Override
      tags:
      - Organizations
    patch:
      description: |
        Update organization feature flag override.

        <div>
          <code>update:organization_feature_flags</code>
        </div>
      operationId: UpdateOrganizationFeatureFlagOverride
      parameters:
      - description: The identifier for the organization
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier for the feature flag
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      - description: Override value
        explode: true
        in: query
        name: value
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag override successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Organization Feature Flag Override
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/properties/{property_key}:
    put:
      description: |
        Update organization property value.

        <div>
          <code>update:organization_properties</code>
        </div>
      operationId: UpdateOrganizationProperty
      parameters:
      - description: The identifier for the organization
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier for the property
        explode: false
        in: path
        name: property_key
        required: true
        schema:
          type: string
        style: simple
      - description: The new property value
        explode: true
        in: query
        name: value
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Property successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Organization Property value
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/properties:
    get:
      description: |
        Gets properties for an organization by org code.

        <div>
          <code>read:organization_properties</code>
        </div>
      operationId: GetOrganizationPropertyValues
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_property_values_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_property_values_response'
          description: Properties successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get Organization Property Values
      tags:
      - Organizations
    patch:
      description: |
        Update organization property values.

        <div>
          <code>update:organization_properties</code>
        </div>
      operationId: UpdateOrganizationProperties
      parameters:
      - description: The identifier for the organization
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationProperties_request'
        description: Properties to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Properties successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Organization Property values
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/mfa:
    put:
      description: |
        Replace Organization MFA Configuration.

        <div>
          <code>update:organization_mfa</code>
        </div>
      operationId: ReplaceOrganizationMFA
      parameters:
      - description: The identifier for the organization
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceOrganizationMFA_request'
        description: MFA details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: MFA Configuration updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Replace Organization MFA Configuration
      tags:
      - Organizations
  /api/v1/organization/{org_code}/handle:
    delete:
      description: |
        Delete organization handle

        <div>
          <code>delete:organization_handles</code>
        </div>
      operationId: DeleteOrganizationHandle
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Handle successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete organization handle
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/logos:
    get:
      description: |
        Read organization logo details

        <div>
          <code>read:organizations</code>
        </div>
      operationId: ReadOrganizationLogo
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          example: org_1ccfb819462
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/read_logo_response'
          description: Successfully retrieved organization logo details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Read organization logo details
      tags:
      - Organizations
  /api/v1/organizations/{org_code}/logos/{type}:
    delete:
      description: |
        Delete organization logo

        <div>
          <code>update:organizations</code>
        </div>
      operationId: DeleteOrganizationLogo
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          example: org_1ccfb819462
          nullable: false
          type: string
        style: simple
      - description: The type of logo to delete.
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - dark
          - light
          example: dark
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Organization logo successfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete organization logo
      tags:
      - Organizations
    post:
      description: |
        Add organization logo

        <div>
          <code>update:organizations</code>
        </div>
      operationId: AddOrganizationLogo
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          example: org_1ccfb819462
          nullable: false
          type: string
        style: simple
      - description: The type of logo to add.
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - dark
          - light
          example: dark
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddOrganizationLogo_request'
        description: Organization logo details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Organization logo successfully updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Add organization logo
      tags:
      - Organizations
  /api/v1/permissions:
    get:
      description: |
        The returned list can be sorted by permission name or permission ID in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.

        <div>
          <code>read:permissions</code>
        </div>
      operationId: GetPermissions
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - id_asc
          - id_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_permissions_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_permissions_response'
          description: Permissions successfully retrieved.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List Permissions
      tags:
      - Permissions
    post:
      description: |
        Create a new permission.

        <div>
          <code>create:permissions</code>
        </div>
      operationId: CreatePermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermission_request'
        description: Permission details.
        required: false
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Permission successfully created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create Permission
      tags:
      - Permissions
  /api/v1/permissions/{permission_id}:
    delete:
      description: |
        Delete permission

        <div>
          <code>delete:permissions</code>
        </div>
      operationId: DeletePermission
      parameters:
      - description: The identifier for the permission.
        explode: false
        in: path
        name: permission_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: permission successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Permission
      tags:
      - Permissions
    patch:
      description: |
        Update permission

        <div>
          <code>update:permissions</code>
        </div>
      operationId: UpdatePermissions
      parameters:
      - description: The identifier for the permission.
        explode: false
        in: path
        name: permission_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermission_request'
        description: Permission details.
        required: false
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Permission successfully updated
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Permission
      tags:
      - Permissions
  /api/v1/properties:
    get:
      description: |
        Returns a list of properties

        <div>
          <code>read:properties</code>
        </div>
      operationId: GetProperties
      parameters:
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: The ID of the property to start after.
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The ID of the property to end before.
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Filter results by user,  organization or application context"
        explode: true
        in: query
        name: context
        required: false
        schema:
          enum:
          - usr
          - org
          - app
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_properties_response'
            application/json:
              schema:
                $ref: '#/components/schemas/get_properties_response'
          description: Properties successfully retrieved.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List properties
      tags:
      - Properties
    post:
      description: |
        Create property.

        <div>
          <code>create:properties</code>
        </div>
      operationId: CreateProperty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProperty_request'
        description: Property details.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_property_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/create_property_response'
          description: Property successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create Property
      tags:
      - Properties
  /api/v1/properties/{property_id}:
    delete:
      description: |
        Delete property.

        <div>
          <code>delete:properties</code>
        </div>
      operationId: DeleteProperty
      parameters:
      - description: The unique identifier for the property.
        explode: false
        in: path
        name: property_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Property successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Property
      tags:
      - Properties
    put:
      description: |
        Update property.

        <div>
          <code>update:properties</code>
        </div>
      operationId: UpdateProperty
      parameters:
      - description: The unique identifier for the property.
        explode: false
        in: path
        name: property_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProperty_request'
        description: The fields of the property to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Property successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Property
      tags:
      - Properties
  /api/v1/property_categories:
    get:
      description: |
        Returns a list of categories.

        <div>
          <code>read:property_categories</code>
        </div>
      operationId: GetCategories
      parameters:
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: The ID of the category to start after.
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The ID of the category to end before.
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Filter the results by User or Organization context
        explode: true
        in: query
        name: context
        required: false
        schema:
          enum:
          - usr
          - org
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_categories_response'
            application/json:
              schema:
                $ref: '#/components/schemas/get_categories_response'
          description: Categories successfully retrieved.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List categories
      tags:
      - Property Categories
    post:
      description: |
        Create category.

        <div>
          <code>create:property_categories</code>
        </div>
      operationId: CreateCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategory_request'
        description: Category details.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_category_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/create_category_response'
          description: Category successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create Category
      tags:
      - Property Categories
  /api/v1/property_categories/{category_id}:
    put:
      description: |
        Update category.

        <div>
          <code>update:property_categories</code>
        </div>
      operationId: UpdateCategory
      parameters:
      - description: The unique identifier for the category.
        explode: false
        in: path
        name: category_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategory_request'
        description: The fields of the category to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: category successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Category
      tags:
      - Property Categories
  /api/v1/roles:
    get:
      description: |
        The returned list can be sorted by role name or role ID in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.

        <div>
          <code>read:roles</code>
        </div>
      operationId: GetRoles
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - id_asc
          - id_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_roles_response'
          description: Roles successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List roles
      tags:
      - Roles
    post:
      description: |
        Create role.

        <div>
          <code>create:roles</code>
        </div>
      operationId: CreateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRole_request'
        description: Role details.
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_roles_response'
          description: Role successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create role
      tags:
      - Roles
  /api/v1/roles/{role_id}:
    delete:
      description: |
        Delete role

        <div>
          <code>delete:roles</code>
        </div>
      operationId: DeleteRole
      parameters:
      - description: The identifier for the role.
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Role successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete role
      tags:
      - Roles
    get:
      description: |
        Get a role

        <div>
          <code>read:roles</code>
        </div>
      operationId: GetRole
      parameters:
      - description: The identifier for the role.
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_role_response'
          description: Role successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get role
      tags:
      - Roles
    patch:
      description: |
        Update a role

        <div>
          <code>update:roles</code>
        </div>
      operationId: UpdateRoles
      parameters:
      - description: The identifier for the role.
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoles_request'
        description: Role details.
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Role successfully updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update role
      tags:
      - Roles
  /api/v1/roles/{role_id}/permissions:
    get:
      description: |
        Get permissions for a role.

        <div>
          <code>read:role_permissions</code>
        </div>
      operationId: GetRolePermissions
      parameters:
      - description: The role's public id.
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - id_asc
          - id_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role_permissions_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/role_permissions_response'
          description: A list of permissions for a role
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error removing user
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get role permissions
      tags:
      - Roles
    patch:
      description: |
        Update role permissions.

        <div>
          <code>update:role_permissions</code>
        </div>
      operationId: UpdateRolePermissions
      parameters:
      - description: The identifier for the role.
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRolePermissions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update_role_permissions_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/update_role_permissions_response'
          description: Permissions successfully updated.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update role permissions
      tags:
      - Roles
  /api/v1/roles/{role_id}/permissions/{permission_id}:
    delete:
      description: |
        Remove a permission from a role.

        <div>
          <code>delete:role_permissions</code>
        </div>
      operationId: RemoveRolePermission
      parameters:
      - description: The role's public id.
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The permission's public id.
        explode: false
        in: path
        name: permission_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Permission successfully removed from role
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error removing user
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Remove role permission
      tags:
      - Roles
  /api/v1/subscribers:
    get:
      description: |
        The returned list can be sorted by full name or email address
        in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query
        string parameter.

        <div>
          <code>read:subscribers</code>
        </div>
      operationId: GetSubscribers
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - email_asc
          - email_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_subscribers_response'
          description: Subscriber successfully retrieved.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List Subscribers
      tags:
      - Subscribers
    post:
      description: |
        Create subscriber.

        <div>
          <code>create:subscribers</code>
        </div>
      operationId: CreateSubscriber
      parameters:
      - description: Subscriber's first name.
        explode: true
        in: query
        name: first_name
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: Subscriber's last name.
        explode: true
        in: query
        name: last_name
        required: true
        schema:
          nullable: true
          type: string
        style: form
      - description: The email address of the subscriber.
        explode: true
        in: query
        name: email
        required: true
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/create_subscriber_success_response'
          description: Subscriber successfully created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create Subscriber
      tags:
      - Subscribers
  /api/v1/subscribers/{subscriber_id}:
    get:
      description: |
        Retrieve a subscriber record.

        <div>
          <code>read:subscribers</code>
        </div>
      operationId: GetSubscriber
      parameters:
      - description: The subscriber's id.
        explode: false
        in: path
        name: subscriber_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_subscriber_response'
          description: Subscriber successfully retrieved.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get Subscriber
      tags:
      - Subscribers
  /api/v1/users:
    get:
      description: |
        The returned list can be sorted by full name or email address in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.

        <div>
          <code>read:users</code>
        </div>
      operationId: getUsers
      parameters:
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: Filter the results by User ID. The query string should be comma
          separated and url encoded.
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Filter the results by email address. The query string should
          be comma separated and url encoded.
        explode: true
        in: query
        name: email
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Filter the results by username. The query string should be comma
          separated and url encoded.
        explode: true
        in: query
        name: username
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Specify additional data to retrieve. Use "organizations" and/or
          "identities".
        explode: true
        in: query
        name: expand
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Filter the results by if the user has at least one organization
          assigned.
        explode: true
        in: query
        name: has_organization
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_response'
          description: Users successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get users
      tags:
      - Users
  /api/v1/users/{user_id}/refresh_claims:
    post:
      description: |
        Refreshes the user's claims and invalidates the current cache.

        <div>
          <code>update:user_refresh_claims</code>
        </div>
      operationId: refreshUserClaims
      parameters:
      - description: The id of the user whose claims needs to be updated.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Claims successfully refreshed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Refresh User Claims and Invalidate Cache
      tags:
      - Users
  /api/v1/user:
    delete:
      description: |
        Delete a user record.

        <div>
          <code>delete:users</code>
        </div>
      operationId: deleteUser
      parameters:
      - description: The user's id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          example: kp_c3143a4b50ad43c88e541d9077681782
          nullable: false
          type: string
        style: form
      - description: "Delete all data and remove the user's profile from all of Kinde,\
          \ including the subscriber list"
        explode: true
        in: query
        name: is_delete_profile
        required: false
        schema:
          example: true
          nullable: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete user
      tags:
      - Users
    get:
      description: |
        Retrieve a user record.

        <div>
          <code>read:users</code>
        </div>
      operationId: getUserData
      parameters:
      - description: The user's id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: Specify additional data to retrieve. Use "organizations" and/or
          "identities".
        explode: true
        in: query
        name: expand
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get user
      tags:
      - Users
    patch:
      description: |
        Update a user record.

        <div>
          <code>update:users</code>
        </div>
      operationId: updateUser
      parameters:
      - description: The user's id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          nullable: false
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUser_request'
        description: The user to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update_user_response'
          description: User successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update user
      tags:
      - Users
    post:
      description: |
        Creates a user record and optionally zero or more identities for the user. An example identity could be the email
        address of the user.

        <div>
          <code>create:users</code>
        </div>
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser_request'
        description: The details of the user to create.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_user_response'
          description: User successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create user
      tags:
      - Users
  /api/v1/users/{user_id}/feature_flags/{feature_flag_key}:
    patch:
      description: |
        Update user feature flag override.

        <div>
          <code>update:user_feature_flags</code>
        </div>
      operationId: UpdateUserFeatureFlagOverride
      parameters:
      - description: The identifier for the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier for the feature flag
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      - description: Override value
        explode: true
        in: query
        name: value
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag override successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update User Feature Flag Override
      tags:
      - Users
  /api/v1/users/{user_id}/properties/{property_key}:
    put:
      description: |
        Update property value.

        <div>
          <code>update:user_properties</code>
        </div>
      operationId: UpdateUserProperty
      parameters:
      - description: The identifier for the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier for the property
        explode: false
        in: path
        name: property_key
        required: true
        schema:
          type: string
        style: simple
      - description: The new property value
        explode: true
        in: query
        name: value
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Property successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Property value
      tags:
      - Users
  /api/v1/users/{user_id}/properties:
    get:
      description: |
        Gets properties for an user by ID.

        <div>
          <code>read:user_properties</code>
        </div>
      operationId: GetUserPropertyValues
      parameters:
      - description: The user's ID.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_property_values_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_property_values_response'
          description: Properties successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get property values
      tags:
      - Users
    patch:
      description: |
        Update property values.

        <div>
          <code>update:user_properties</code>
        </div>
      operationId: UpdateUserProperties
      parameters:
      - description: The identifier for the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationProperties_request'
        description: Properties to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Properties successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update Property values
      tags:
      - Users
  /api/v1/users/{user_id}/password:
    put:
      description: |
        Set user password.

        <div>
          <code>update:user_passwords</code>
        </div>
      operationId: SetUserPassword
      parameters:
      - description: The identifier for the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserPassword_request'
        description: Password details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error creating user.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Set User password
      tags:
      - Users
  /api/v1/users/{user_id}/identities:
    get:
      description: |
        Gets a list of identities for an user by ID.

        <div>
          <code>read:user_identities</code>
        </div>
      operationId: GetUserIdentities
      parameters:
      - description: The user's ID.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The ID of the identity to start after.
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The ID of the identity to end before.
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_identities_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_identities_response'
          description: Identities successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get identities
      tags:
      - Users
    post:
      description: |
        Creates an identity for a user.

        <div>
          <code>create:user_identities</code>
        </div>
      operationId: CreateUserIdentity
      parameters:
      - description: The user's ID.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserIdentity_request'
        description: The identity details.
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_identity_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/create_identity_response'
          description: Identity successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error creating identity.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create identity
      tags:
      - Users
  /api/v1/users/{user_id}/sessions:
    delete:
      description: |
        Invalidate user sessions.

        <div>
          <code>delete:user_sessions</code>
        </div>
      operationId: DeleteUserSessions
      parameters:
      - description: The identifier for the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          example: kp_c3143a4b50ad43c88e541d9077681782
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User sessions successfully invalidated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_response'
          description: The specified resource was not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete user sessions
      tags:
      - Users
  /api/v1/users/{user_id}/mfa:
    get:
      description: |
        Get a user’s MFA configuration.

        <div>
          <code>read:user_mfa</code>
        </div>
      operationId: GetUsersMFA
      parameters:
      - description: The identifier for the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          example: kp_c3143a4b50ad43c88e541d9077681782
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_user_mfa_response'
          description: Successfully retrieve user's MFA configuration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_response'
          description: The specified resource was not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get user's MFA configuration
      tags:
      - Users
  /api/v1/users/{user_id}/mfa/{factor_id}:
    delete:
      description: |
        Reset a user’s MFA.

        <div>
          <code>delete:user_mfa</code>
        </div>
      operationId: ResetUsersMFA
      parameters:
      - description: The identifier for the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          example: kp_c3143a4b50ad43c88e541d9077681782
          type: string
        style: simple
      - description: The identifier for the MFA factor
        explode: false
        in: path
        name: factor_id
        required: true
        schema:
          example: mfa_0193278a00ac29b3f6d4e4d462d55c47
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User's MFA successfully reset.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_response'
          description: The specified resource was not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Reset MFA for a user
      tags:
      - Users
  /api/v1/events/{event_id}:
    get:
      description: |
        Returns an event

        <div>
          <code>read:events</code>
        </div>
      operationId: GetEvent
      parameters:
      - description: The event id.
        explode: false
        in: path
        name: event_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_event_response'
            application/json:
              schema:
                $ref: '#/components/schemas/get_event_response'
          description: Event successfully retrieved.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get Event
      tags:
      - Webhooks
  /api/v1/event_types:
    get:
      description: |
        Returns a list event type definitions

        <div>
          <code>read:event_types</code>
        </div>
      operationId: GetEventTypes
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_event_types_response'
            application/json:
              schema:
                $ref: '#/components/schemas/get_event_types_response'
          description: Event types successfully retrieved.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List Event Types
      tags:
      - Webhooks
  /api/v1/webhooks/{webhook_id}:
    delete:
      description: |
        Delete webhook

        <div>
          <code>delete:webhooks</code>
        </div>
      operationId: DeleteWebHook
      parameters:
      - description: The webhook id.
        explode: false
        in: path
        name: webhook_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/delete_webhook_response'
            application/json:
              schema:
                $ref: '#/components/schemas/delete_webhook_response'
          description: Webhook successfully deleted.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Delete Webhook
      tags:
      - Webhooks
  /api/v1/webhooks:
    get:
      description: |
        List webhooks

        <div>
          <code>read:webhooks</code>
        </div>
      operationId: GetWebHooks
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_webhooks_response'
            application/json:
              schema:
                $ref: '#/components/schemas/get_webhooks_response'
          description: Webhook list successfully returned.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: List Webhooks
      tags:
      - Webhooks
    patch:
      description: |
        Update a webhook

        <div>
          <code>update:webhooks</code>
        </div>
      operationId: UpdateWebHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebHook_request'
        description: Update webhook request specification.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/update_webhook_response'
            application/json:
              schema:
                $ref: '#/components/schemas/update_webhook_response'
          description: Webhook successfully updated.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Update a Webhook
      tags:
      - Webhooks
    post:
      description: |
        Create a webhook

        <div>
          <code>create:webhooks</code>
        </div>
      operationId: CreateWebHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebHook_request'
        description: Webhook request specification.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/create_webhook_response'
            application/json:
              schema:
                $ref: '#/components/schemas/create_webhook_response'
          description: Webhook successfully created.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Create a Webhook
      tags:
      - Webhooks
  /oauth2/v2/user_profile:
    get:
      description: |
        This endpoint returns a user's ID, names, profile picture URL and email of the currently logged in user.
      operationId: getUserProfileV2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_profile_v2'
          description: Details of logged in user.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Get user profile
      tags:
      - OAuth
  /oauth2/introspect:
    post:
      description: Retrieve information about the provided token.
      operationId: tokenIntrospection
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/tokenIntrospection_request'
        description: Token details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token_introspect'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/token_introspect'
          description: Details of the token.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token_error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/token_error_response'
          description: Bad request.
        "403":
          description: Invalid credentials.
        "429":
          description: Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Introspect
      tags:
      - OAuth
  /oauth2/revoke:
    post:
      description: Use this endpoint to invalidate an access or refresh token. The
        token will no longer be valid for use.
      operationId: tokenRevocation
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/tokenRevocation_request'
        description: Details of the token to be revoked.
        required: true
      responses:
        "200":
          description: Token successfully revoked.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token_error_response'
          description: Bad request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Unauthorized - invalid credentials.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Too many requests. Request was throttled.
      security:
      - kindeBearerAuth: []
      summary: Revoke token
      tags:
      - OAuth
components:
  parameters:
    api_id:
      description: The API's ID.
      explode: false
      in: path
      name: api_id
      required: true
      schema:
        example: 7ccd126599aa422a771abcb341596881
        type: string
      style: simple
    application_id:
      description: The application's ID / client ID.
      explode: false
      in: path
      name: application_id
      required: true
      schema:
        example: 3b0b5c6c8fcc464fab397f4969b5f482
        type: string
      style: simple
    property_key:
      description: The property's key.
      explode: false
      in: path
      name: property_key
      required: true
      schema:
        example: kp_some_key
        type: string
      style: simple
    variable_id:
      description: The environment variable's ID.
      explode: false
      in: path
      name: variable_id
      required: true
      schema:
        example: env_var_0192b1941f125645fa15bf28a662a0b3
        type: string
      style: simple
  responses:
    bad_request:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_response'
      description: Invalid request.
    not_found:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/not_found_response'
      description: The specified resource was not found
    forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_response'
      description: Unauthorized - invalid credentials.
    too_many_requests:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_response'
      description: Too many requests. Request was throttled.
  schemas:
    success_response:
      example:
        code: OK
        message: Success
      properties:
        message:
          example: Success
          type: string
        code:
          example: OK
          type: string
      type: object
    error:
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message.
          type: string
      type: object
    error_response:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/error'
          type: array
      type: object
    not_found_response:
      properties:
        errors:
          $ref: '#/components/schemas/not_found_response_errors'
      type: object
    get_apis_response:
      example:
        code: OK
        apis:
        - audience: https://api.example.com
          is_management_api: false
          name: Example API
          id: 7ccd126599aa422a771abcb341596881
          scopes:
          - id: api_scope_01939128c3d7193ae87c4755213c07c6
            key: create:apis
          - id: api_scope_01939128c3d7193ae87c4755213c07c6
            key: create:apis
        - audience: https://api.example.com
          is_management_api: false
          name: Example API
          id: 7ccd126599aa422a771abcb341596881
          scopes:
          - id: api_scope_01939128c3d7193ae87c4755213c07c6
            key: create:apis
          - id: api_scope_01939128c3d7193ae87c4755213c07c6
            key: create:apis
        message: Success
        next_token: Njo5Om1hvWVfYXNj
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: Success
          type: string
        next_token:
          description: Pagination token.
          example: Njo5Om1hvWVfYXNj
          type: string
        apis:
          items:
            $ref: '#/components/schemas/get_apis_response_apis_inner'
          type: array
      type: object
    create_apis_response:
      example:
        code: OK
        api:
          id: 7ccd126599aa422a771abcb341596881
        message: Success
      properties:
        message:
          description: A Kinde generated message.
          example: Success
          type: string
        code:
          description: A Kinde generated status code.
          example: OK
          type: string
        api:
          $ref: '#/components/schemas/create_apis_response_api'
      type: object
    create_api_scopes_response:
      example:
        code: OK
        scope:
          id: api_scope_0193ab57965aef77b2b687d0ef673713
        message: Success
      properties:
        message:
          description: A Kinde generated message.
          example: Success
          type: string
        code:
          description: A Kinde generated status code.
          example: OK
          type: string
        scope:
          $ref: '#/components/schemas/create_api_scopes_response_scope'
      type: object
    get_environment_variables_response:
      example:
        environment_variables:
        - created_on: 2021-01-01T00:00:00Z
          is_secret: false
          id: env_var_0192b1941f125645fa15bf28a662a0b3
          value: some-secret
          key: MY_API_KEY
        - created_on: 2021-01-01T00:00:00Z
          is_secret: false
          id: env_var_0192b1941f125645fa15bf28a662a0b3
          value: some-secret
          key: MY_API_KEY
        code: OK
        has_more: true
        message: Success
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: Success
          type: string
        has_more:
          description: Whether more records exist.
          type: boolean
        environment_variables:
          items:
            $ref: '#/components/schemas/environment_variable'
          type: array
      type: object
    get_environment_variable_response:
      example:
        code: OK
        message: Success
        environment_variable:
          created_on: 2021-01-01T00:00:00Z
          is_secret: false
          id: env_var_0192b1941f125645fa15bf28a662a0b3
          value: some-secret
          key: MY_API_KEY
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: Success
          type: string
        environment_variable:
          $ref: '#/components/schemas/environment_variable'
      type: object
    create_environment_variable_response:
      example:
        code: VARIABLE_CREATED
        message: Environment variable created
        environment_variable:
          id: env_var_0192b194f6156fb7452fe38cfb144958
      properties:
        message:
          description: A Kinde generated message.
          example: Environment variable created
          type: string
        code:
          description: A Kinde generated status code.
          example: VARIABLE_CREATED
          type: string
        environment_variable:
          $ref: '#/components/schemas/create_environment_variable_response_environment_variable'
      type: object
    update_environment_variable_response:
      example:
        code: ENVIRONMENT_VARIABLE_UPDATED
        message: Environment variable updated
      properties:
        message:
          description: A Kinde generated message.
          example: Environment variable updated
          type: string
        code:
          description: A Kinde generated status code.
          example: ENVIRONMENT_VARIABLE_UPDATED
          type: string
      type: object
    delete_environment_variable_response:
      example:
        code: ENVIRONMENT_VARIABLE_DELETED
        message: Environment variable deleted
      properties:
        message:
          description: A Kinde generated message.
          example: Environment variable deleted
          type: string
        code:
          description: A Kinde generated status code.
          example: ENVIRONMENT_VARIABLE_DELETED
          type: string
      type: object
    get_business_response:
      example:
        code: OK
        business:
          code: bus_c69fb73b091
          phone: 555-555-5555
          has_kinde_branding: true
          created_on: 2021-01-01T00:00:00Z
          timezone: Los Angeles (Pacific Standard Time)
          terms_url: https://example.com/terms
          name: Tailsforce Ltd
          privacy_url: https://example.com/privacy
          industry: Healthcare & Medical
          has_clickwrap: false
          email: sally@example.com
        message: Success
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: Success
          type: string
        business:
          $ref: '#/components/schemas/get_business_response_business'
      type: object
    get_industries_response:
      example:
        code: OK
        industries:
        - name: Administration & Office Support
          key: administration_office_support
        - name: Administration & Office Support
          key: administration_office_support
        message: Success
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: Success
          type: string
        industries:
          items:
            $ref: '#/components/schemas/get_industries_response_industries_inner'
          type: array
      type: object
    get_timezones_response:
      example:
        code: OK
        timezones:
        - name: "London (Greenwich Mean Time) [+01:00]"
          key: london_greenwich_mean_time
        - name: "London (Greenwich Mean Time) [+01:00]"
          key: london_greenwich_mean_time
        message: Success
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: Success
          type: string
        timezones:
          items:
            $ref: '#/components/schemas/get_timezones_response_timezones_inner'
          type: array
      type: object
    get_api_response:
      example:
        code: OK
        api:
          audience: https://api.example.com
          is_management_api: false
          name: Example API
          id: 7ccd126599aa422a771abcb341596881
          scopes:
          - id: api_scope_01939222ef24200668b9f5829af001ce
            key: read:logs
          - id: api_scope_01939222ef24200668b9f5829af001ce
            key: read:logs
          applications:
          - is_active: true
            name: My M2M app
            id: 3b0b5c6c8fcc464fab397f4969b5f482
            type: Machine to machine (M2M)
          - is_active: true
            name: My M2M app
            id: 3b0b5c6c8fcc464fab397f4969b5f482
            type: Machine to machine (M2M)
        message: success_response
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: success_response
          type: string
        api:
          $ref: '#/components/schemas/get_api_response_api'
      type: object
    get_api_scopes_response:
      example:
        code: OK
        scopes:
        - description: Read logs scope
          id: api_scope_01939128c3d7193ae87c4755213c07c6
          key: read:logs
        - description: Read logs scope
          id: api_scope_01939128c3d7193ae87c4755213c07c6
          key: read:logs
        message: success_response
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: success_response
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/get_api_scopes_response_scopes_inner'
          type: array
      type: object
    get_api_scope_response:
      example:
        code: OK
        scope:
          description: Read logs scope
          id: api_scope_01939128c3d7193ae87c4755213c07c6
          key: read:logs
        message: success_response
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: success_response
          type: string
        scope:
          $ref: '#/components/schemas/get_api_scopes_response_scopes_inner'
      type: object
    authorize_app_api_response:
      example:
        code: API_APPLICATIONS_UPDATED
        applications_disconnected:
        - applications_disconnected
        - applications_disconnected
        message: API applications updated
        applications_connected:
        - d2db282d6214242b3b145c123f0c123
        - d2db282d6214242b3b145c123f0c123
      properties:
        message:
          example: API applications updated
          type: string
        code:
          example: API_APPLICATIONS_UPDATED
          type: string
        applications_disconnected:
          items:
            type: string
          type: array
        applications_connected:
          items:
            example: d2db282d6214242b3b145c123f0c123
            type: string
          type: array
      type: object
    delete_api_response:
      example:
        code: API_DELETED
        message: API successfully deleted
      properties:
        message:
          example: API successfully deleted
          type: string
        code:
          example: API_DELETED
          type: string
      type: object
    user:
      example:
        failed_sign_ins: 6
        last_name: last_name
        is_suspended: true
        last_signed_in: last_signed_in
        total_sign_ins: 0
        picture: picture
        identities:
        - identity: identity
          type: type
        - identity: identity
          type: type
        created_on: created_on
        preferred_email: preferred_email
        organizations:
        - organizations
        - organizations
        id: id
        provided_id: provided_id
        first_name: first_name
        username: username
      properties:
        id:
          description: Unique ID of the user in Kinde.
          type: string
        provided_id:
          description: External ID for user.
          type: string
        preferred_email:
          description: Default email address of the user in Kinde.
          type: string
        username:
          description: Primary username of the user in Kinde.
          type: string
        last_name:
          description: User's last name.
          type: string
        first_name:
          description: User's first name.
          type: string
        is_suspended:
          description: Whether the user is currently suspended or not.
          type: boolean
        picture:
          description: User's profile picture URL.
          type: string
        total_sign_ins:
          description: Total number of user sign ins.
          nullable: true
          type: integer
        failed_sign_ins:
          description: Number of consecutive failed user sign ins.
          nullable: true
          type: integer
        last_signed_in:
          description: Last sign in date in ISO 8601 format.
          nullable: true
          type: string
        created_on:
          description: Date of user creation in ISO 8601 format.
          nullable: true
          type: string
        organizations:
          description: Array of organizations a user belongs to.
          items:
            type: string
          type: array
        identities:
          description: Array of identities belonging to the user.
          items:
            $ref: '#/components/schemas/user_identities_inner'
          type: array
      type: object
    update_user_response:
      example:
        is_suspended: true
        id: id
        given_name: given_name
        is_password_reset_requested: true
        family_name: family_name
        email: email
        picture: picture
      properties:
        id:
          description: Unique ID of the user in Kinde.
          type: string
        given_name:
          description: User's first name.
          type: string
        family_name:
          description: User's last name.
          type: string
        email:
          description: User's preferred email.
          type: string
        is_suspended:
          description: Whether the user is currently suspended or not.
          type: boolean
        is_password_reset_requested:
          description: Whether a password reset has been requested.
          type: boolean
        picture:
          description: User's profile picture URL.
          nullable: true
          type: string
      type: object
    users:
      description: Array of users.
      items:
        $ref: '#/components/schemas/user'
      type: array
    users_response:
      example:
        code: code
        message: message
        next_token: next_token
        users:
        - failed_sign_ins: 6
          last_name: last_name
          is_suspended: true
          last_signed_in: last_signed_in
          total_sign_ins: 0
          picture: picture
          identities:
          - identity: identity
            type: type
          - identity: identity
            type: type
          created_on: created_on
          organizations:
          - organizations
          - organizations
          id: id
          provided_id: provided_id
          first_name: first_name
          email: email
          username: username
        - failed_sign_ins: 6
          last_name: last_name
          is_suspended: true
          last_signed_in: last_signed_in
          total_sign_ins: 0
          picture: picture
          identities:
          - identity: identity
            type: type
          - identity: identity
            type: type
          created_on: created_on
          organizations:
          - organizations
          - organizations
          id: id
          provided_id: provided_id
          first_name: first_name
          email: email
          username: username
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        users:
          items:
            $ref: '#/components/schemas/users_response_users_inner'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    create_user_response:
      example:
        identities:
        - result:
            created: true
          type: type
        - result:
            created: true
          type: type
        created: true
        id: id
      properties:
        id:
          description: Unique ID of the user in Kinde.
          type: string
        created:
          description: True if the user was successfully created.
          type: boolean
        identities:
          items:
            $ref: '#/components/schemas/user_identity'
          type: array
      type: object
    create_organization_response:
      example:
        code: OK
        organization:
          code: org_1ccfb819462
        message: Success
      properties:
        message:
          description: Response message.
          example: Success
          type: string
        code:
          description: Response code.
          example: OK
          type: string
        organization:
          $ref: '#/components/schemas/create_organization_response_organization'
      type: object
    user_identity:
      example:
        result:
          created: true
        type: type
      properties:
        type:
          description: The type of identity object created.
          type: string
        result:
          $ref: '#/components/schemas/user_identity_result'
      type: object
    create_property_response:
      example:
        code: code
        property:
          id: id
        message: message
      properties:
        message:
          type: string
        code:
          type: string
        property:
          $ref: '#/components/schemas/create_property_response_property'
      type: object
    create_identity_response:
      example:
        code: code
        identity:
          id: id
        message: message
      properties:
        message:
          type: string
        code:
          type: string
        identity:
          $ref: '#/components/schemas/create_identity_response_identity'
      type: object
    get_identities_response:
      example:
        code: code
        identities:
        - total_logins: 0
          created_on: created_on
          is_confirmed: true
          name: name
          id: id
          type: type
          last_login_on: last_login_on
        - total_logins: 0
          created_on: created_on
          is_confirmed: true
          name: name
          id: id
          type: type
          last_login_on: last_login_on
        has_more: true
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        identities:
          items:
            $ref: '#/components/schemas/identity'
          type: array
        has_more:
          description: Whether more records exist.
          type: boolean
      type: object
    get_user_mfa_response:
      example:
        code: code
        mfa:
          usage_count: 2
          created_on: 2024-11-18T13:31:46.795085+11:00
          last_used_on: 2024-11-18T13:32:07.22538+11:00
          name: sally@gmail.com
          id: mfa_01933d1ca1f093e7fad48ebcdb65a871
          type: email
          is_verified: true
        message: message
      properties:
        message:
          type: string
        code:
          type: string
        mfa:
          $ref: '#/components/schemas/get_user_mfa_response_mfa'
      type: object
    get_properties_response:
      example:
        code: code
        has_more: true
        message: message
        properties:
        - is_private: true
          name: name
          description: description
          id: id
          key: key
          is_kinde_property: true
        - is_private: true
          name: name
          description: description
          id: id
          key: key
          is_kinde_property: true
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        properties:
          items:
            $ref: '#/components/schemas/property'
          type: array
        has_more:
          description: Whether more records exist.
          type: boolean
      type: object
    get_property_values_response:
      example:
        code: code
        message: message
        next_token: next_token
        properties:
        - name: Town
          description: Where the entity is located
          id: prop_0192b7e8b4f8ca08110d2b22059662a8
          value: West-side Staines massive
          key: kp_town
        - name: Town
          description: Where the entity is located
          id: prop_0192b7e8b4f8ca08110d2b22059662a8
          value: West-side Staines massive
          key: kp_town
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        properties:
          items:
            $ref: '#/components/schemas/property_value'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    create_category_response:
      example:
        code: code
        message: message
        category:
          id: id
      properties:
        message:
          type: string
        code:
          type: string
        category:
          $ref: '#/components/schemas/create_category_response_category'
      type: object
    get_categories_response:
      example:
        code: code
        categories:
        - name: name
          id: id
        - name: name
          id: id
        has_more: true
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        categories:
          items:
            $ref: '#/components/schemas/category'
          type: array
        has_more:
          description: Whether more records exist.
          type: boolean
      type: object
    get_event_response:
      example:
        code: code
        message: message
        event:
          event_id: event_id
          data: "{}"
          source: source
          type: type
          timestamp: 0
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        event:
          $ref: '#/components/schemas/get_event_response_event'
      type: object
    get_event_types_response:
      example:
        code: code
        event_types:
        - schema: "{}"
          code: code
          origin: origin
          name: name
          id: id
        - schema: "{}"
          code: code
          origin: origin
          name: name
          id: id
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        event_types:
          items:
            $ref: '#/components/schemas/event_type'
          type: array
      type: object
    get_webhooks_response:
      example:
        code: code
        webhooks:
        - endpoint: endpoint
          event_types:
          - event_types
          - event_types
          created_on: created_on
          name: name
          description: description
          id: id
        - endpoint: endpoint
          event_types:
          - event_types
          - event_types
          created_on: created_on
          name: name
          description: description
          id: id
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        webhooks:
          items:
            $ref: '#/components/schemas/webhook'
          type: array
      type: object
    webhook:
      example:
        endpoint: endpoint
        event_types:
        - event_types
        - event_types
        created_on: created_on
        name: name
        description: description
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        endpoint:
          type: string
        description:
          type: string
        event_types:
          items:
            type: string
          type: array
        created_on:
          description: Created on date in ISO 8601 format.
          type: string
      type: object
    create_webhook_response:
      example:
        code: code
        webhook:
          endpoint: endpoint
          id: id
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        webhook:
          $ref: '#/components/schemas/create_webhook_response_webhook'
      type: object
    update_webhook_response:
      example:
        code: code
        webhook:
          id: id
        message: message
      properties:
        message:
          type: string
        code:
          type: string
        webhook:
          $ref: '#/components/schemas/update_webhook_response_webhook'
      type: object
    create_connection_response:
      example:
        code: code
        connection:
          id: id
        message: message
      properties:
        message:
          type: string
        code:
          type: string
        connection:
          $ref: '#/components/schemas/create_connection_response_connection'
      type: object
    get_connections_response:
      example:
        code: code
        has_more: true
        message: message
        connections:
        - code: code
          connection:
            name: name
            id: id
            display_name: display_name
            strategy: strategy
          message: message
        - code: code
          connection:
            name: name
            id: id
            display_name: display_name
            strategy: strategy
          message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        connections:
          items:
            $ref: '#/components/schemas/connection'
          type: array
        has_more:
          description: Whether more records exist.
          type: boolean
      type: object
    delete_webhook_response:
      example:
        code: code
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
      type: object
    event_type:
      example:
        schema: "{}"
        code: code
        origin: origin
        name: name
        id: id
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        origin:
          type: string
        schema:
          type: object
      type: object
    organization_item_schema:
      example:
        is_auto_membership_enabled: true
        code: org_1ccfb819462
        name: Acme Corp
        handle: acme_corp
        external_id: some1234
        is_default: false
      properties:
        code:
          description: The unique identifier for the organization.
          example: org_1ccfb819462
          type: string
        name:
          description: The organization's name.
          example: Acme Corp
          type: string
        handle:
          description: A unique handle for the organization - can be used for dynamic
            callback urls.
          example: acme_corp
          nullable: true
          type: string
        is_default:
          description: Whether the organization is the default organization.
          example: false
          type: boolean
        external_id:
          description: The organization's external identifier - commonly used when
            migrating from or mapping to other systems.
          example: some1234
          nullable: true
          type: string
        is_auto_membership_enabled:
          description: If users become members of this organization when the org code
            is supplied during authentication.
          example: true
          type: boolean
      type: object
    get_environment_response:
      example:
        environment:
          code: production
          google_analytics_tag: G-1234567
          favicon_fallback: https://yoursubdomain.kinde.com/favicon_fallback?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
          button_color_dark:
            hsl: "hsl(220, 100%, 50%)"
            raw: '#0056F1'
            hex: '#0056F1'
          button_border_radius: 8
          input_border_radius: 4
          link_color:
            hsl: "hsl(220, 100%, 50%)"
            raw: '#0056F1'
            hex: '#0056F1'
          theme_code: light
          button_text_color_dark:
            hsl: "hsl(220, 100%, 50%)"
            raw: '#0056F1'
            hex: '#0056F1'
          logo: https://yoursubdomain.kinde.com/logo?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
          color_scheme: light
          custom_domain: app.example.com
          hotjar_site_id: "404009"
          kinde_domain: example.kinde.com
          is_default: true
          card_border_radius: 16
          background_color_dark:
            hsl: "hsl(220, 100%, 50%)"
            raw: '#0056F1'
            hex: '#0056F1'
          button_color:
            hsl: "hsl(220, 100%, 50%)"
            raw: '#0056F1'
            hex: '#0056F1'
          background_color:
            hsl: "hsl(0, 0%, 100%)"
            raw: '#ffffff'
            hex: '#ffffff'
          button_text_color:
            hsl: "hsl(0, 0%, 100%)"
            raw: '#ffffff'
            hex: '#ffffff'
          created_on: 2021-01-01T00:00:00Z
          name: Production
          is_live: true
          logo_dark: https://yoursubdomain.kinde.com/logo_dark?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
          link_color_dark:
            hsl: "hsl(220, 100%, 50%)"
            raw: '#0056F1'
            hex: '#0056F1'
          favicon_svg: https://yoursubdomain.kinde.com/favicon_svg?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
        code: OK
        message: success_response
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: success_response
          type: string
        environment:
          $ref: '#/components/schemas/get_environment_response_environment'
      type: object
    get_organization_response:
      example:
        code: org_1ccfb819462
        favicon_fallback: https://yoursubdomain.kinde.com/favicon_fallback?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
        button_color_dark:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        external_id: some1234
        button_border_radius: 8
        is_auto_membership_enabled: true
        input_border_radius: 4
        link_color:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        theme_code: light
        button_text_color_dark:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        logo: https://yoursubdomain.kinde.com/logo?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
        color_scheme: light
        is_allow_registrations: true
        handle: acme_corp
        is_default: false
        card_border_radius: 16
        background_color_dark:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        button_color:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        background_color:
          hsl: "hsl(0, 0%, 100%)"
          raw: '#ffffff'
          hex: '#ffffff'
        button_text_color:
          hsl: "hsl(0, 0%, 100%)"
          raw: '#ffffff'
          hex: '#ffffff'
        created_on: 2021-01-01T00:00:00Z
        name: Acme Corp
        logo_dark: https://yoursubdomain.kinde.com/logo_dark?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
        link_color_dark:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        favicon_svg: https://yoursubdomain.kinde.com/favicon_svg?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
      properties:
        code:
          description: The unique identifier for the organization.
          example: org_1ccfb819462
          type: string
        name:
          description: The organization's name.
          example: Acme Corp
          type: string
        handle:
          description: A unique handle for the organization - can be used for dynamic
            callback urls.
          example: acme_corp
          nullable: true
          type: string
        is_default:
          description: Whether the organization is the default organization.
          example: false
          type: boolean
        external_id:
          description: The organization's external identifier - commonly used when
            migrating from or mapping to other systems.
          example: some1234
          nullable: true
          type: string
        is_auto_membership_enabled:
          description: If users become members of this organization when the org code
            is supplied during authentication.
          example: true
          type: boolean
        logo:
          description: The organization's logo URL.
          example: https://yoursubdomain.kinde.com/logo?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
          nullable: true
          type: string
        logo_dark:
          description: The organization's logo URL to be used for dark themes.
          example: https://yoursubdomain.kinde.com/logo_dark?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
          nullable: true
          type: string
        favicon_svg:
          description: The organization's SVG favicon URL. Optimal format for most
            browsers
          example: https://yoursubdomain.kinde.com/favicon_svg?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
          nullable: true
          type: string
        favicon_fallback:
          description: "The favicon URL to be used as a fallback in browsers that\
            \ don’t support SVG, add a PNG"
          example: https://yoursubdomain.kinde.com/favicon_fallback?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
          nullable: true
          type: string
        link_color:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        background_color:
          $ref: '#/components/schemas/get_environment_response_environment_background_color'
        button_color:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        button_text_color:
          $ref: '#/components/schemas/get_environment_response_environment_background_color'
        link_color_dark:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        background_color_dark:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        button_text_color_dark:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        button_color_dark:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        button_border_radius:
          description: "The border radius for buttons. Value is px, Kinde transforms\
            \ to rem for rendering"
          example: 8
          nullable: true
          type: integer
        card_border_radius:
          description: "The border radius for cards. Value is px, Kinde transforms\
            \ to rem for rendering"
          example: 16
          nullable: true
          type: integer
        input_border_radius:
          description: "The border radius for inputs. Value is px, Kinde transforms\
            \ to rem for rendering"
          example: 4
          nullable: true
          type: integer
        theme_code:
          description: "Whether the environment is forced into light mode, dark mode\
            \ or user preference"
          enum:
          - light
          - dark
          - user_preference
          type: string
        color_scheme:
          description: The color scheme for the environment used for meta tags based
            on the theme code
          enum:
          - light
          - dark
          - light dark
          type: string
        created_on:
          description: Date of organization creation in ISO 8601 format.
          example: 2021-01-01T00:00:00Z
          type: string
        is_allow_registrations:
          deprecated: true
          description: Deprecated - Use 'is_auto_membership_enabled' instead
          example: true
          nullable: true
          type: boolean
      type: object
    organization_user:
      example:
        full_name: John Snow
        roles:
        - admin
        - admin
        last_name: Snow
        id: kp:97c2ba24217d48e3b96a799b76cf2c74
        joined_on: 2021-01-01T00:00:00Z
        first_name: John
        email: john.snow@example.com
        picture: https://example.com/john_snow.jpg
      properties:
        id:
          description: The unique ID for the user.
          example: kp:97c2ba24217d48e3b96a799b76cf2c74
          nullable: true
          type: string
        email:
          description: The user's email address.
          example: john.snow@example.com
          nullable: true
          type: string
        full_name:
          description: The user's full name.
          example: John Snow
          type: string
        last_name:
          description: The user's last name.
          example: Snow
          nullable: true
          type: string
        first_name:
          description: The user's first name.
          example: John
          nullable: true
          type: string
        picture:
          description: The user's profile picture URL.
          example: https://example.com/john_snow.jpg
          nullable: true
          type: string
        joined_on:
          description: The date the user joined the organization.
          example: 2021-01-01T00:00:00Z
          type: string
        roles:
          description: The roles the user has in the organization.
          items:
            description: The role's key.
            example: admin
            type: string
          type: array
      type: object
    category:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    connection:
      example:
        code: code
        connection:
          name: name
          id: id
          display_name: display_name
          strategy: strategy
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        connection:
          $ref: '#/components/schemas/connection_connection'
      type: object
    environment_variable:
      example:
        created_on: 2021-01-01T00:00:00Z
        is_secret: false
        id: env_var_0192b1941f125645fa15bf28a662a0b3
        value: some-secret
        key: MY_API_KEY
      properties:
        id:
          description: The unique ID for the environment variable.
          example: env_var_0192b1941f125645fa15bf28a662a0b3
          type: string
        key:
          description: The name of the environment variable.
          example: MY_API_KEY
          type: string
        value:
          description: The value of the environment variable.
          example: some-secret
          nullable: true
          type: string
        is_secret:
          description: Whether the environment variable is sensitive.
          example: false
          type: boolean
        created_on:
          description: The date the environment variable was created.
          example: 2021-01-01T00:00:00Z
          type: string
      type: object
    identity:
      example:
        total_logins: 0
        created_on: created_on
        is_confirmed: true
        name: name
        id: id
        type: type
        last_login_on: last_login_on
      properties:
        id:
          type: string
        type:
          type: string
        is_confirmed:
          type: boolean
        created_on:
          description: Date of user creation in ISO 8601 format.
          type: string
        last_login_on:
          description: Date of user creation in ISO 8601 format.
          type: string
        total_logins:
          type: integer
        name:
          type: string
      type: object
    property:
      example:
        is_private: true
        name: name
        description: description
        id: id
        key: key
        is_kinde_property: true
      properties:
        id:
          type: string
        key:
          type: string
        name:
          type: string
        is_private:
          type: boolean
        description:
          type: string
        is_kinde_property:
          type: boolean
      type: object
    property_value:
      example:
        name: Town
        description: Where the entity is located
        id: prop_0192b7e8b4f8ca08110d2b22059662a8
        value: West-side Staines massive
        key: kp_town
      properties:
        id:
          example: prop_0192b7e8b4f8ca08110d2b22059662a8
          type: string
        name:
          example: Town
          type: string
        description:
          example: Where the entity is located
          nullable: true
          type: string
        key:
          example: kp_town
          type: string
        value:
          example: West-side Staines massive
          nullable: true
          type: string
      type: object
    role:
      properties:
        id:
          type: string
        key:
          type: string
        name:
          type: string
        description:
          type: string
      type: object
    subscribers_subscriber:
      example:
        full_name: full_name
        last_name: last_name
        id: id
        first_name: first_name
        email: email
      properties:
        id:
          type: string
        email:
          type: string
        full_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      type: object
    subscriber:
      example:
        preferred_email: preferred_email
        last_name: last_name
        id: id
        first_name: first_name
      properties:
        id:
          type: string
        preferred_email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      type: object
    organization_user_role:
      example:
        name: name
        id: id
        key: key
      properties:
        id:
          type: string
        key:
          type: string
        name:
          type: string
      type: object
    organization_user_role_permissions:
      properties:
        id:
          type: string
        role:
          type: string
        permissions:
          $ref: '#/components/schemas/organization_user_role_permissions_permissions'
      type: object
    organization_user_permission:
      example:
        roles:
        - id: id
          key: key
        - id: id
          key: key
        name: name
        description: description
        id: id
        key: key
      properties:
        id:
          type: string
        key:
          type: string
        name:
          type: string
        description:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/organization_user_permission_roles_inner'
          type: array
      type: object
    organization_users:
      items:
        $ref: '#/components/schemas/organization_user'
      type: array
    get_subscriber_response:
      example:
        code: code
        subscribers:
        - preferred_email: preferred_email
          last_name: last_name
          id: id
          first_name: first_name
        - preferred_email: preferred_email
          last_name: last_name
          id: id
          first_name: first_name
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        subscribers:
          items:
            $ref: '#/components/schemas/subscriber'
          type: array
      type: object
    get_subscribers_response:
      example:
        code: code
        subscribers:
        - full_name: full_name
          last_name: last_name
          id: id
          first_name: first_name
          email: email
        - full_name: full_name
          last_name: last_name
          id: id
          first_name: first_name
          email: email
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        subscribers:
          items:
            $ref: '#/components/schemas/subscribers_subscriber'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    get_roles_response:
      example:
        code: code
        roles:
        - is_default_role: true
          name: name
          description: description
          id: id
          key: key
        - is_default_role: true
          name: name
          description: description
          id: id
          key: key
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        roles:
          items:
            $ref: '#/components/schemas/roles'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    get_role_response:
      example:
        code: code
        role:
          is_default_role: false
          name: Administrator
          description: Full access to all resources.
          id: 01929904-316d-bb2c-069f-99dfea4ac394
          key: admin
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        role:
          $ref: '#/components/schemas/get_role_response_role'
      type: object
    create_roles_response:
      example:
        code: code
        role:
          id: id
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        role:
          $ref: '#/components/schemas/create_roles_response_role'
      type: object
    get_organizations_response:
      example:
        code: OK
        organizations:
        - is_auto_membership_enabled: true
          code: org_1ccfb819462
          name: Acme Corp
          handle: acme_corp
          external_id: some1234
          is_default: false
        - is_auto_membership_enabled: true
          code: org_1ccfb819462
          name: Acme Corp
          handle: acme_corp
          external_id: some1234
          is_default: false
        message: Success
        next_token: Mjo5Om1hbWVfYZNj
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: Success
          type: string
        organizations:
          items:
            $ref: '#/components/schemas/organization_item_schema'
          type: array
        next_token:
          description: Pagination token.
          example: Mjo5Om1hbWVfYZNj
          type: string
      type: object
    get_organization_users_response:
      example:
        code: OK
        organization_users:
        - full_name: John Snow
          roles:
          - admin
          - admin
          last_name: Snow
          id: kp:97c2ba24217d48e3b96a799b76cf2c74
          joined_on: 2021-01-01T00:00:00Z
          first_name: John
          email: john.snow@example.com
          picture: https://example.com/john_snow.jpg
        - full_name: John Snow
          roles:
          - admin
          - admin
          last_name: Snow
          id: kp:97c2ba24217d48e3b96a799b76cf2c74
          joined_on: 2021-01-01T00:00:00Z
          first_name: John
          email: john.snow@example.com
          picture: https://example.com/john_snow.jpg
        message: Success
        next_token: next_token
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: Success
          type: string
        organization_users:
          items:
            $ref: '#/components/schemas/organization_user'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    get_organizations_user_roles_response:
      example:
        code: code
        roles:
        - name: name
          id: id
          key: key
        - name: name
          id: id
          key: key
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        roles:
          items:
            $ref: '#/components/schemas/organization_user_role'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    get_organizations_user_permissions_response:
      example:
        code: code
        permissions:
        - roles:
          - id: id
            key: key
          - id: id
            key: key
          name: name
          description: description
          id: id
          key: key
        - roles:
          - id: id
            key: key
          - id: id
            key: key
          name: name
          description: description
          id: id
          key: key
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/organization_user_permission'
          type: array
      type: object
    get_organization_feature_flags_response:
      example:
        code: code
        feature_flags:
          key:
            type: str
            value: value
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        feature_flags:
          additionalProperties:
            $ref: '#/components/schemas/get_organization_feature_flags_response_feature_flags_value'
          description: The environment's feature flag settings.
          type: object
      type: object
    get_environment_feature_flags_response:
      example:
        code: code
        feature_flags:
          key:
            type: str
            value: value
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        feature_flags:
          additionalProperties:
            $ref: '#/components/schemas/get_organization_feature_flags_response_feature_flags_value'
          description: The environment's feature flag settings.
          type: object
        next_token:
          description: Pagination token.
          type: string
      type: object
    add_organization_users_response:
      example:
        users_added:
        - users_added
        - users_added
        code: code
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        users_added:
          items:
            type: string
          type: array
      type: object
    update_role_permissions_response:
      example:
        permissions_added:
        - permissions_added
        - permissions_added
        code: code
        message: message
        permissions_removed:
        - permissions_removed
        - permissions_removed
      properties:
        code:
          type: string
        message:
          type: string
        permissions_added:
          items:
            type: string
          type: array
        permissions_removed:
          items:
            type: string
          type: array
      type: object
    update_organization_users_response:
      example:
        users_added:
        - kp_057ee6debc624c70947b6ba512908c35
        - kp_057ee6debc624c70947b6ba512908c35
        code: OK
        users_updated:
        - kp_057ee6debc624c70947b6ba512908c35
        - kp_057ee6debc624c70947b6ba512908c35
        users_removed:
        - kp_057ee6debc624c70947b6ba512908c35
        - kp_057ee6debc624c70947b6ba512908c35
        message: Success
      properties:
        message:
          example: Success
          type: string
        code:
          example: OK
          type: string
        users_added:
          items:
            example: kp_057ee6debc624c70947b6ba512908c35
            type: string
          type: array
        users_updated:
          items:
            example: kp_057ee6debc624c70947b6ba512908c35
            type: string
          type: array
        users_removed:
          items:
            example: kp_057ee6debc624c70947b6ba512908c35
            type: string
          type: array
      type: object
    connected_apps_auth_url:
      example:
        session_id: session_id
        url: url
      properties:
        url:
          description: A URL that is used to authenticate an end-user against a connected
            app.
          type: string
        session_id:
          description: A unique identifier for the login session.
          type: string
      type: object
    create_subscriber_success_response:
      example:
        subscriber:
          subscriber_id: subscriber_id
      properties:
        subscriber:
          $ref: '#/components/schemas/create_subscriber_success_response_subscriber'
      type: object
    connected_apps_access_token:
      example:
        access_token: access_token
        access_token_expiry: access_token_expiry
      properties:
        access_token:
          description: The access token to access a third-party provider.
          type: string
        access_token_expiry:
          description: The date and time that the access token expires.
          type: string
      type: object
    api_result:
      properties:
        result:
          description: The result of the api operation.
          type: string
      type: object
    create_application_response:
      example:
        code: code
        application:
          id: 3b0b5c6c8fcc464fab397f4969b5f482
          client_secret: sUJSHI3ZQEVTJkx6hOxdOSHaLsZkCBRFLzTNOI791rX8mDjgt7LC
          client_id: 3b0b5c6c8fcc464fab397f4969b5f482
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        application:
          $ref: '#/components/schemas/create_application_response_application'
      type: object
    get_application_response:
      example:
        code: code
        application:
          homepage_uri: https://yourapp.com
          name: My React app
          id: 3b0b5c6c8fcc464fab397f4969b5f482
          client_secret: sUJSHI3ZQEVTJkx6hOxdOSHaLsZkCBRFLzTNOI791rX8mDjgt7LC
          type: m2m
          login_uri: https://yourapp.com/api/auth/login
          client_id: 3b0b5c6c8fcc464fab397f4969b5f482
          has_cancel_button: false
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        application:
          $ref: '#/components/schemas/get_application_response_application'
      type: object
    applications:
      example:
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    get_applications_response:
      example:
        code: code
        message: message
        next_token: next_token
        applications:
        - name: name
          id: id
          type: type
        - name: name
          id: id
          type: type
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        applications:
          items:
            $ref: '#/components/schemas/applications'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    redirect_callback_urls:
      example:
        redirect_urls:
        - redirect_urls
        - redirect_urls
      properties:
        redirect_urls:
          description: An application's redirect URLs.
          items:
            type: string
          type: array
      type: object
    get_redirect_callback_urls_response:
      properties:
        redirect_urls:
          description: An application's redirect callback URLs.
          items:
            $ref: '#/components/schemas/redirect_callback_urls'
          type: array
      type: object
    logout_redirect_urls:
      example:
        logout_urls:
        - logout_urls
        - logout_urls
        code: OK
        message: Success
      properties:
        logout_urls:
          description: An application's logout URLs.
          items:
            type: string
          type: array
        code:
          description: Response code.
          example: OK
          type: string
        message:
          description: Response message.
          example: Success
          type: string
      type: object
    get_permissions_response:
      example:
        code: code
        permissions:
        - name: name
          description: description
          id: id
          key: key
        - name: name
          description: description
          id: id
          key: key
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/permissions'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    permissions:
      example:
        name: name
        description: description
        id: id
        key: key
      properties:
        id:
          description: The permission's ID.
          type: string
        key:
          description: The permission identifier to use in code.
          type: string
        name:
          description: The permission's name.
          type: string
        description:
          description: The permission's description.
          type: string
      type: object
    roles:
      example:
        is_default_role: true
        name: name
        description: description
        id: id
        key: key
      properties:
        id:
          description: The role's ID.
          type: string
        key:
          description: The role identifier to use in code.
          type: string
        name:
          description: The role's name.
          type: string
        description:
          description: The role's description.
          nullable: true
          type: string
        is_default_role:
          description: Whether the role is the default role.
          type: boolean
      type: object
    role_permissions_response:
      example:
        code: code
        permissions:
        - name: name
          description: description
          id: id
          key: key
        - name: name
          description: description
          id: id
          key: key
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/permissions'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    read_logo_response:
      example:
        code: OK
        message: Success
        logos:
        - path: /logo?p_org_code=org_1767f11ce62
          file_name: kinde_light.jpeg
          type: light
        - path: /logo?p_org_code=org_1767f11ce62
          file_name: kinde_light.jpeg
          type: light
      properties:
        code:
          description: Response code.
          example: OK
          type: string
        logos:
          description: A list of logos.
          items:
            $ref: '#/components/schemas/read_logo_response_logos_inner'
          type: array
        message:
          description: Response message.
          example: Success
          type: string
      type: object
    user_profile_v2:
      example:
        sub: kp_c3143a4b50ad43c88e541d9077681782
        email_verified: true
        updated_at: 1612345678
        name: John Snow
        preferred_username: john_snow
        id: kp_c3143a4b50ad43c88e541d9077681782
        given_name: John
        provided_id: some_external_id
        family_name: Snow
        email: john.snow@example.com
        picture: https://example.com/john_snow.jpg
      properties:
        sub:
          description: Unique ID of the user in Kinde.
          example: kp_c3143a4b50ad43c88e541d9077681782
          type: string
        provided_id:
          description: Value of the user's ID in a third-party system when the user
            is imported into Kinde.
          example: some_external_id
          nullable: true
          type: string
        name:
          description: User's first and last name separated by a space.
          example: John Snow
          type: string
        given_name:
          description: User's first name.
          example: John
          type: string
        family_name:
          description: User's last name.
          example: Snow
          type: string
        updated_at:
          description: Date the user was last updated at (In Unix time).
          example: 1612345678
          type: integer
        email:
          description: User's email address if available.
          example: john.snow@example.com
          type: string
        email_verified:
          description: Whether the user's email address has been verified.
          example: true
          type: boolean
        picture:
          description: URL that point's to the user's picture or avatar
          example: https://example.com/john_snow.jpg
          nullable: true
          type: string
        preferred_username:
          description: User's preferred username.
          example: john_snow
          nullable: true
          type: string
        id:
          description: Unique ID of the user in Kinde
          example: kp_c3143a4b50ad43c88e541d9077681782
          type: string
      type: object
    token_introspect:
      example:
        aud:
        - https://api.example.com/v1
        - https://api.example.com/v1
        active: true
        exp: 1612345678
        iat: 1612345678
        client_id: 3b0b5c6c8fcc464fab397f4969b5f482
      properties:
        active:
          description: Indicates the status of the token.
          type: boolean
        aud:
          description: Array of intended token recipients.
          items:
            example: https://api.example.com/v1
            type: string
          type: array
        client_id:
          description: Identifier for the requesting client.
          example: 3b0b5c6c8fcc464fab397f4969b5f482
          type: string
        exp:
          description: Token expiration timestamp.
          example: 1612345678
          type: integer
        iat:
          description: Token issuance timestamp.
          example: 1612345678
          type: integer
      type: object
    token_error_response:
      properties:
        error:
          description: Error.
          type: string
        error_description:
          description: The error description.
          type: string
      type: object
    addAPIs_request:
      properties:
        name:
          description: The name of the API. (1-64 characters).
          example: Example API
          type: string
        audience:
          description: A unique identifier for the API - commonly the URL. This value
            will be used as the `audience` parameter in authorization claims. (1-64
            characters)
          example: https://api.example.com
          type: string
      required:
      - audience
      - name
      type: object
    addAPIScope_request:
      properties:
        key:
          description: "The key reference for the scope (1-64 characters, no white\
            \ space)."
          example: read:logs
          type: string
        description:
          description: Description of the api scope purpose.
          example: Scope for reading logs.
          type: string
      required:
      - key
      type: object
    updateAPIScope_request:
      properties:
        description:
          description: Description of the api scope purpose.
          example: Scope for reading logs.
          type: string
      type: object
    updateAPIApplications_request_applications_inner:
      properties:
        id:
          description: The application's Client ID.
          example: d2db282d6214242b3b145c123f0c123
          type: string
        operation:
          description: "Optional operation, set to 'delete' to revoke authorization\
            \ for the application. If not set, the application will be authorized."
          example: delete
          type: string
      required:
      - id
      type: object
    updateAPIApplications_request:
      properties:
        applications:
          items:
            $ref: '#/components/schemas/updateAPIApplications_request_applications_inner'
          type: array
      required:
      - applications
      type: object
    createApplication_request:
      properties:
        name:
          description: The application's name.
          example: React Native app
          type: string
        type:
          description: "The application's type. Use `reg` for regular server rendered\
            \ applications, `spa` for single-page applications, and `m2m` for machine-to-machine\
            \ applications."
          enum:
          - reg
          - spa
          - m2m
          type: string
      required:
      - name
      - type
      type: object
    updateApplication_request:
      properties:
        name:
          description: The application's name.
          type: string
        language_key:
          description: The application's language key.
          type: string
        logout_uris:
          description: The application's logout uris.
          items:
            type: string
          type: array
        redirect_uris:
          description: The application's redirect uris.
          items:
            type: string
          type: array
        login_uri:
          description: The default login route for resolving session issues.
          type: string
        homepage_uri:
          description: The homepage link to your application.
          type: string
      type: object
    updateApplicationsProperty_request_value:
      description: The new value for the property
      example: Some new value
      oneOf:
      - type: string
      - type: boolean
    updateApplicationsProperty_request:
      properties:
        value:
          $ref: '#/components/schemas/updateApplicationsProperty_request_value'
      required:
      - value
      type: object
    updateApplicationTokens_request:
      properties:
        access_token_lifetime:
          description: The lifetime of an access token in seconds.
          example: 3600
          type: integer
        refresh_token_lifetime:
          description: The lifetime of a refresh token in seconds.
          example: 86400
          type: integer
        id_token_lifetime:
          description: The lifetime of an ID token in seconds.
          example: 3600
          type: integer
        authenticated_session_lifetime:
          description: The lifetime of an authenticated session in seconds.
          example: 86400
          type: integer
        is_hasura_mapping_enabled:
          description: Enable or disable Hasura mapping.
          example: true
          type: boolean
      type: object
    updateBusiness_request:
      properties:
        business_name:
          description: The name of the business.
          example: Tailsforce Ltd
          nullable: true
          type: string
        email:
          description: The email address of the business.
          example: sally@example.com
          nullable: true
          type: string
        industry_key:
          description: The key of the industry of your business. Can be retrieved
            from the /industries endpoint.
          example: construction
          nullable: true
          type: string
        is_click_wrap:
          description: Whether the business is using clickwrap agreements.
          example: false
          nullable: true
          type: boolean
        is_show_kinde_branding:
          description: Whether the business is showing Kinde branding. Requires a
            paid plan.
          example: true
          nullable: true
          type: boolean
        kinde_perk_code:
          description: The Kinde perk code for the business.
          nullable: true
          type: string
        phone:
          description: The phone number of the business.
          example: 123-456-7890
          nullable: true
          type: string
        privacy_url:
          description: The URL to the business's privacy policy.
          example: https://example.com/privacy
          nullable: true
          type: string
        terms_url:
          description: The URL to the business's terms of service.
          example: https://example.com/terms
          nullable: true
          type: string
        timezone_key:
          description: The key of the timezone of your business. Can be retrieved
            from the /timezones endpoint.
          example: los_angeles_pacific_standard_time
          nullable: true
          type: string
      type: object
    replaceRedirectCallbackURLs_request:
      properties:
        urls:
          description: Array of callback urls.
          items:
            type: string
          type: array
      type: object
    replaceLogoutRedirectURLs_request:
      properties:
        urls:
          description: Array of logout urls.
          items:
            type: string
          type: array
      type: object
    CreateConnection_request_options_oneOf:
      description: "Social connection options (e.g., Google SSO)."
      properties:
        client_id:
          description: OAuth client ID.
          example: hji7db2146af332akfldfded22
          type: string
        client_secret:
          description: OAuth client secret.
          example: 19fkjdalg521l23fassf3039d4ae18b
          type: string
        is_use_custom_domain:
          description: Use custom domain callback URL.
          example: true
          type: boolean
      type: object
    CreateConnection_request_options_oneOf_1:
      description: Azure AD connection options.
      properties:
        client_id:
          description: Client ID.
          example: hji7db2146af332akfldfded22
          type: string
        client_secret:
          description: Client secret.
          example: 19fkjdalg521l23fassf3039d4ae18b
          type: string
        home_realm_domains:
          description: List of domains to limit authentication.
          example:
          - '@kinde.com'
          - '@kinde.io'
          items:
            type: string
          type: array
        entra_id_domain:
          description: Domain for Entra ID.
          example: kinde.com
          type: string
        is_use_common_endpoint:
          description: Use https://login.windows.net/common instead of a default endpoint.
          example: true
          type: boolean
        is_sync_user_profile_on_login:
          description: Sync user profile data with IDP.
          example: true
          type: boolean
        is_retrieve_provider_user_groups:
          description: Include user group info from MS Entra ID.
          example: true
          type: boolean
        is_extended_attributes_required:
          description: Include additional user profile information.
          example: true
          type: boolean
      type: object
    CreateConnection_request_options_oneOf_2:
      description: "SAML connection options (e.g., Cloudflare SAML)."
      properties:
        home_realm_domains:
          description: List of domains to restrict authentication.
          example:
          - '@kinde.com'
          - '@kinde.io'
          items:
            type: string
          type: array
        saml_entity_id:
          description: SAML Entity ID.
          example: https://kinde.com
          type: string
        saml_acs_url:
          description: Assertion Consumer Service URL.
          example: https://kinde.com/saml/acs
          type: string
        saml_idp_metadata_url:
          description: URL for the IdP metadata.
          example: https://kinde.com/saml/metadata
          type: string
        saml_email_key_attr:
          description: Attribute key for the user’s email.
          example: email
          type: string
        saml_first_name_key_attr:
          description: Attribute key for the user’s first name.
          example: given_name
          type: string
        saml_last_name_key_attr:
          description: Attribute key for the user’s last name.
          example: family_name
          type: string
        is_create_missing_user:
          description: Create user if they don’t exist.
          example: true
          type: boolean
        saml_signing_certificate:
          description: Certificate for signing SAML requests.
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIDdTCCAl2gAwIBAgIEUjZoyDANBgkqhkiG9w0BAQsFADBzMQswCQYDVQQGEwJVUzELMAkGA1UECAwCQ0ExEjAQBgNVBAcMCVNhbiBGcmFuYzEXMBUGA1UECgwOQ2xv
            -----END CERTIFICATE-----
          type: string
        saml_signing_private_key:
          description: Private key associated with the signing certificate.
          example: |-
            -----BEGIN PRIVATE KEY-----
            MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCy5+KLjTzF6tvl
            -----END PRIVATE KEY-----
          type: string
      type: object
    CreateConnection_request_options:
      oneOf:
      - $ref: '#/components/schemas/CreateConnection_request_options_oneOf'
      - $ref: '#/components/schemas/CreateConnection_request_options_oneOf_1'
      - $ref: '#/components/schemas/CreateConnection_request_options_oneOf_2'
    CreateConnection_request:
      properties:
        name:
          description: The internal name of the connection.
          nullable: false
          type: string
        display_name:
          description: The public facing name of the connection.
          nullable: false
          type: string
        strategy:
          description: The identity provider identifier for the connection.
          enum:
          - oauth2:apple
          - oauth2:azure_ad
          - oauth2:bitbucket
          - oauth2:discord
          - oauth2:facebook
          - oauth2:github
          - oauth2:gitlab
          - oauth2:google
          - oauth2:linkedin
          - oauth2:microsoft
          - oauth2:patreon
          - oauth2:slack
          - oauth2:stripe
          - oauth2:twitch
          - oauth2:twitter
          - oauth2:xero
          - saml:custom
          - wsfed:azure_ad
          nullable: false
          type: string
        enabled_applications:
          description: Client IDs of applications in which this connection is to be
            enabled.
          items:
            type: string
          type: array
        options:
          $ref: '#/components/schemas/CreateConnection_request_options'
      type: object
    ReplaceConnection_request:
      properties:
        name:
          description: The internal name of the connection.
          example: ConnectionA
          nullable: false
          type: string
        display_name:
          description: The public-facing name of the connection.
          example: Connection
          nullable: false
          type: string
        enabled_applications:
          description: Client IDs of applications in which this connection is to be
            enabled.
          example:
          - c647dbe20f5944e28af97c9184fded22
          - 20bbffaa4c5e492a962273039d4ae18b
          items:
            type: string
          type: array
        options:
          $ref: '#/components/schemas/CreateConnection_request_options'
      type: object
    UpdateConnection_request:
      properties:
        name:
          description: The internal name of the connection.
          example: ConnectionA
          nullable: false
          type: string
        display_name:
          description: The public facing name of the connection.
          example: Connection
          nullable: false
          type: string
        enabled_applications:
          description: Client IDs of applications in which this connection is to be
            enabled.
          example:
          - c647dbe20f5944e28af97c9184fded22
          - 20bbffaa4c5e492a962273039d4ae18b
          items:
            type: string
          type: array
        options:
          $ref: '#/components/schemas/CreateConnection_request_options'
      type: object
    UpdateEnvironementFeatureFlagOverride_request:
      properties:
        value:
          description: The flag override value.
          nullable: false
          type: string
      required:
      - value
      type: object
    createEnvironmentVariable_request:
      properties:
        key:
          description: The name of the environment variable (max 128 characters).
          example: MY_API_KEY
          type: string
        value:
          description: The value of the new environment variable (max 2048 characters).
          example: some-secret-value
          type: string
        is_secret:
          description: Whether the environment variable is sensitive. Secrets are
            not-readable by you or your team after creation.
          example: false
          type: boolean
      required:
      - key
      - value
      type: object
    updateEnvironmentVariable_request:
      properties:
        key:
          description: The key to update.
          example: MY_API_KEY
          type: string
        value:
          description: The new value for the environment variable.
          example: new-secret-value
          type: string
        is_secret:
          description: Whether the environment variable is sensitive. Secret variables
            are not-readable by you or your team after creation.
          type: boolean
      type: object
    CreateFeatureFlag_request:
      properties:
        name:
          description: The name of the flag.
          nullable: false
          type: string
        description:
          description: Description of the flag purpose.
          nullable: false
          type: string
        key:
          description: The flag identifier to use in code.
          nullable: false
          type: string
        type:
          description: The variable type.
          enum:
          - str
          - int
          - bool
          nullable: false
          type: string
        allow_override_level:
          description: Allow the flag to be overridden at a different level.
          enum:
          - env
          - org
          - usr
          nullable: false
          type: string
        default_value:
          description: Default value for the flag used by environments and organizations.
          nullable: false
          type: string
      required:
      - default_value
      - key
      - name
      - type
      type: object
    UpdateIdentity_request:
      properties:
        is_primary:
          description: Whether the identity is the primary for it's type
          nullable: false
          type: boolean
      type: object
    ReplaceMFA_request:
      properties:
        policy:
          description: "Specifies whether MFA is required, optional, or not enforced."
          enum:
          - required
          - "off"
          - optional
          nullable: false
          type: string
        enabled_factors:
          description: The MFA methods to enable.
          items:
            enum:
            - mfa:email
            - mfa:sms
            - mfa:authenticator_app
            type: string
          nullable: false
          type: array
      required:
      - enabled_factors
      - policy
      type: object
    createOrganization_request:
      properties:
        name:
          description: The organization's name.
          example: Acme Corp
          type: string
        feature_flags:
          additionalProperties:
            description: Value of the feature flag.
            enum:
            - str
            - int
            - bool
            type: string
          description: The organization's feature flag settings.
          type: object
        external_id:
          description: The organization's external identifier - commonly used when
            migrating from or mapping to other systems.
          example: some1234
          type: string
        background_color:
          description: The organization's brand settings - background color.
          type: string
        button_color:
          description: The organization's brand settings - button color.
          type: string
        button_text_color:
          description: The organization's brand settings - button text color.
          type: string
        link_color:
          description: The organization's brand settings - link color.
          type: string
        background_color_dark:
          description: The organization's brand settings - dark mode background color.
          type: string
        button_color_dark:
          description: The organization's brand settings - dark mode button color.
          type: string
        button_text_color_dark:
          description: The organization's brand settings - dark mode button text color.
          type: string
        link_color_dark:
          description: The organization's brand settings - dark mode link color.
          type: string
        theme_code:
          description: The organization's brand settings - theme/mode 'light' | 'dark'
            | 'user_preference'.
          type: string
        handle:
          description: A unique handle for the organization - can be used for dynamic
            callback urls.
          example: acme_corp
          type: string
        is_allow_registrations:
          description: If users become members of this organization when the org code
            is supplied during authentication.
          example: true
          type: boolean
        is_custom_auth_connections_enabled:
          description: Enable custom auth connections for this organization.
          type: boolean
      required:
      - name
      type: object
    updateOrganization_request:
      properties:
        name:
          description: The organization's name.
          example: Acme Corp
          type: string
        external_id:
          description: The organization's ID.
          example: some1234
          type: string
        background_color:
          description: The organization's brand settings - background color.
          example: '#fff'
          type: string
        button_color:
          description: The organization's brand settings - button color.
          example: '#fff'
          type: string
        button_text_color:
          description: The organization's brand settings - button text color.
          example: '#fff'
          type: string
        link_color:
          description: The organization's brand settings - link color.
          example: '#fff'
          type: string
        background_color_dark:
          description: The organization's brand settings - dark mode background color.
          example: '#000'
          type: string
        button_color_dark:
          description: The organization's brand settings - dark mode button color.
          example: '#000'
          type: string
        button_text_color_dark:
          description: The organization's brand settings - dark mode button text color.
          example: '#000'
          type: string
        link_color_dark:
          description: The organization's brand settings - dark mode link color.
          example: '#000'
          type: string
        theme_code:
          description: The organization's brand settings - theme/mode.
          enum:
          - light
          - dark
          - user_preference
          example: light
          type: string
        handle:
          description: The organization's handle.
          example: acme_corp
          type: string
        is_allow_registrations:
          deprecated: true
          description: Deprecated - Use 'is_auto_membership_enabled' instead.
          type: boolean
        is_custom_auth_connections_enabled:
          description: Enable custom auth connections for this organization.
          example: true
          type: boolean
        is_auto_join_domain_list:
          description: Users can sign up to this organization.
          example: true
          type: boolean
        allowed_domains:
          description: Domains allowed for self-sign up to this environment.
          example:
          - https://acme.kinde.com
          - https://acme.com
          items:
            type: string
          type: array
        is_enable_advanced_orgs:
          description: Activate advanced organization features.
          example: true
          type: boolean
        is_enforce_mfa:
          description: Enforce MFA for all users in this organization.
          example: true
          type: boolean
      type: object
    AddOrganizationUsers_request_users_inner:
      properties:
        id:
          description: The users id.
          example: kp_057ee6debc624c70947b6ba512908c35
          type: string
        roles:
          description: Role keys to assign to the user.
          items:
            example: manager
            type: string
          type: array
        permissions:
          description: Permission keys to assign to the user.
          items:
            example: admin
            type: string
          type: array
      type: object
    AddOrganizationUsers_request:
      properties:
        users:
          description: Users to be added to the organization.
          items:
            $ref: '#/components/schemas/AddOrganizationUsers_request_users_inner'
          type: array
      type: object
    UpdateOrganizationUsers_request_users_inner:
      properties:
        id:
          description: The users id.
          example: kp_057ee6debc624c70947b6ba512908c35
          type: string
        operation:
          description: "Optional operation, set to 'delete' to remove the user from\
            \ the organization."
          example: delete
          type: string
        roles:
          description: Role keys to assign to the user.
          items:
            example: manager
            type: string
          type: array
        permissions:
          description: Permission keys to assign to the user.
          items:
            example: admin
            type: string
          type: array
      type: object
    UpdateOrganizationUsers_request:
      properties:
        users:
          description: "Users to add, update or remove from the organization."
          items:
            $ref: '#/components/schemas/UpdateOrganizationUsers_request_users_inner'
          type: array
      type: object
    CreateOrganizationUserRole_request:
      properties:
        role_id:
          description: The role id.
          type: string
      type: object
    CreateOrganizationUserPermission_request:
      properties:
        permission_id:
          description: The permission id.
          type: string
      type: object
    UpdateOrganizationProperties_request:
      properties:
        properties:
          description: Property keys and values
          nullable: false
          type: object
      required:
      - properties
      type: object
    ReplaceOrganizationMFA_request:
      properties:
        enabled_factors:
          description: The MFA methods to enable.
          items:
            enum:
            - mfa:email
            - mfa:sms
            - mfa:authenticator_app
            type: string
          nullable: false
          type: array
      required:
      - enabled_factors
      type: object
    AddOrganizationLogo_request:
      properties:
        logo:
          description: The logo file to upload.
          format: binary
          type: string
      required:
      - logo
      type: object
    CreatePermission_request:
      properties:
        name:
          description: The permission's name.
          type: string
        description:
          description: The permission's description.
          type: string
        key:
          description: The permission identifier to use in code.
          type: string
      type: object
    CreateProperty_request:
      properties:
        name:
          description: The name of the property.
          nullable: false
          type: string
        description:
          description: Description of the property purpose.
          nullable: false
          type: string
        key:
          description: The property identifier to use in code.
          nullable: false
          type: string
        type:
          description: The property type.
          enum:
          - single_line_text
          - multi_line_text
          nullable: false
          type: string
        context:
          description: The context that the property applies to.
          enum:
          - org
          - usr
          - app
          nullable: false
          type: string
        is_private:
          description: Whether the property can be included in id and access tokens.
          nullable: false
          type: boolean
        category_id:
          description: Which category the property belongs to.
          nullable: false
          type: string
      required:
      - category_id
      - context
      - is_private
      - key
      - name
      - type
      type: object
    UpdateProperty_request:
      properties:
        name:
          description: The name of the property.
          nullable: false
          type: string
        description:
          description: Description of the property purpose.
          type: string
        is_private:
          description: Whether the property can be included in id and access tokens.
          type: boolean
        category_id:
          description: Which category the property belongs to.
          nullable: false
          type: string
      required:
      - category_id
      - is_private
      - name
      type: object
    CreateCategory_request:
      properties:
        name:
          description: The name of the category.
          nullable: false
          type: string
        context:
          description: The context that the category applies to.
          enum:
          - org
          - usr
          - app
          nullable: false
          type: string
      required:
      - context
      - name
      type: object
    UpdateCategory_request:
      properties:
        name:
          description: The name of the category.
          nullable: false
          type: string
      type: object
    CreateRole_request:
      properties:
        name:
          description: The role's name.
          type: string
        description:
          description: The role's description.
          type: string
        key:
          description: The role identifier to use in code.
          type: string
        is_default_role:
          description: Set role as default for new users.
          type: boolean
      type: object
    UpdateRoles_request:
      properties:
        name:
          description: The role's name.
          type: string
        description:
          description: The role's description.
          type: string
        key:
          description: The role identifier to use in code.
          type: string
        is_default_role:
          description: Set role as default for new users.
          type: boolean
      required:
      - key
      - name
      type: object
    UpdateRolePermissions_request_permissions_inner:
      properties:
        id:
          description: The permission id.
          type: string
        operation:
          description: "Optional operation, set to 'delete' to remove the permission\
            \ from the role."
          type: string
      type: object
    UpdateRolePermissions_request:
      properties:
        permissions:
          description: Permissions to add or remove from the role.
          items:
            $ref: '#/components/schemas/UpdateRolePermissions_request_permissions_inner'
          type: array
      type: object
    createUser_request_profile:
      description: Basic information required to create a user.
      properties:
        given_name:
          description: User's first name.
          type: string
        family_name:
          description: User's last name.
          type: string
        picture:
          description: The user's profile picture.
          type: string
      type: object
    createUser_request_identities_inner_details:
      description: Additional details required to create the user.
      properties:
        email:
          description: The email address of the user.
          example: email@email.com
          type: string
        phone:
          description: The phone number of the user.
          example: +61426148233
          type: string
        phone_country_id:
          description: The country code for the phone number.
          example: au
          type: string
        username:
          description: The username of the user.
          example: myusername
          type: string
      type: object
    createUser_request_identities_inner:
      description: The result of the user creation operation.
      properties:
        type:
          description: "The type of identity to create, e.g. email, username, or phone."
          enum:
          - email
          - phone
          - username
          type: string
        details:
          $ref: '#/components/schemas/createUser_request_identities_inner_details'
      type: object
    createUser_request:
      properties:
        profile:
          $ref: '#/components/schemas/createUser_request_profile'
        organization_code:
          description: The unique code associated with the organization you want the
            user to join.
          type: string
        provided_id:
          description: An external id to reference the user.
          type: string
        identities:
          description: Array of identities to assign to the created user
          example:
          - type: email
            details:
              email: email@email.com
          - type: phone
            details:
              phone: +61426148233
              phone_country_id: au
          - type: username
            details:
              username: myusername
          items:
            $ref: '#/components/schemas/createUser_request_identities_inner'
          type: array
      type: object
    updateUser_request:
      properties:
        given_name:
          description: User's first name.
          type: string
        family_name:
          description: User's last name.
          type: string
        picture:
          description: The user's profile picture.
          type: string
        is_suspended:
          description: Whether the user is currently suspended or not.
          type: boolean
        is_password_reset_requested:
          description: Prompt the user to change their password on next sign in.
          type: boolean
        provided_id:
          description: An external id to reference the user.
          type: string
      type: object
    SetUserPassword_request:
      properties:
        hashed_password:
          description: The hashed password.
          type: string
        hashing_method:
          description: The hashing method or algorithm used to encrypt the user’s
            password. Default is bcrypt.
          enum:
          - bcrypt
          - crypt
          - md5
          - wordpress
          type: string
        salt:
          description: Extra characters added to passwords to make them stronger.
            Not required for bcrypt.
          type: string
        salt_position:
          description: Position of salt in password string. Not required for bcrypt.
          enum:
          - prefix
          - suffix
          type: string
        is_temporary_password:
          description: The user will be prompted to set a new password after entering
            this one.
          type: boolean
      required:
      - hashed_password
      type: object
    CreateUserIdentity_request:
      properties:
        value:
          description: "The email address, social identity, or username of the user."
          example: sally@example.com
          type: string
        type:
          description: The identity type
          enum:
          - email
          - username
          - phone
          - enterprise
          - social
          example: email
          type: string
        phone_country_id:
          description: "The country code for the phone number, only required when\
            \ identity type is 'phone'."
          example: au
          type: string
        connection_id:
          description: "The social connection ID, only required when identity type\
            \ is 'social'."
          example: conn_019289347f1193da6c0e4d49b97b4bd2
          type: string
      type: object
    CreateWebHook_request:
      properties:
        endpoint:
          description: The webhook endpoint url
          nullable: false
          type: string
        event_types:
          description: Array of event type keys
          items:
            type: string
          nullable: false
          type: array
        name:
          description: The webhook name
          nullable: false
          type: string
        description:
          description: The webhook description
          nullable: true
          type: string
      required:
      - endpoint
      - event_types
      - name
      type: object
    UpdateWebHook_request:
      properties:
        event_types:
          description: Array of event type keys
          items:
            type: string
          nullable: false
          type: array
        name:
          description: The webhook name
          nullable: false
          type: string
        description:
          description: The webhook description
          nullable: true
          type: string
      type: object
    tokenIntrospection_request:
      properties:
        token:
          description: The token to be introspected.
          example: rrkYRaz8z96sAiOxPt6IzOCoelFFT4ujWIM2XNZgZsmX2Zu3imZ1W
          type: string
        token_type_hint:
          description: A hint about the token type being queried in the request.
          enum:
          - access_token
          - refresh_token
          type: string
      required:
      - token
      type: object
    tokenRevocation_request:
      properties:
        client_id:
          description: The `client_id` of your application.
          example: 3b0b5c6c8fcc464fab397f4969b5f482
          type: string
        client_secret:
          description: The `client_secret` of your application. Required for backend
            apps only.
          example: rrkYRaz8z96sAiOxPt6IzOCoelFFT4ujWIM2XNZgZsmX2Zu3imZ1W
          type: string
        token:
          description: The token to be revoked.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o
          type: string
        token_type_hint:
          description: The type of token to be revoked.
          enum:
          - access_token
          - refresh_token
          type: string
      required:
      - client_id
      - token
      type: object
    not_found_response_errors:
      properties:
        code:
          example: ROUTE_NOT_FOUND
          type: string
        message:
          example: The requested API route does not exist
          type: string
      type: object
    get_apis_response_apis_inner_scopes_inner:
      example:
        id: api_scope_01939128c3d7193ae87c4755213c07c6
        key: create:apis
      properties:
        id:
          example: api_scope_01939128c3d7193ae87c4755213c07c6
          type: string
        key:
          example: create:apis
          type: string
      type: object
    get_apis_response_apis_inner:
      example:
        audience: https://api.example.com
        is_management_api: false
        name: Example API
        id: 7ccd126599aa422a771abcb341596881
        scopes:
        - id: api_scope_01939128c3d7193ae87c4755213c07c6
          key: create:apis
        - id: api_scope_01939128c3d7193ae87c4755213c07c6
          key: create:apis
      properties:
        id:
          description: The unique ID for the API.
          example: 7ccd126599aa422a771abcb341596881
          type: string
        name:
          description: The API’s name.
          example: Example API
          type: string
        audience:
          description: A unique identifier for the API - commonly the URL. This value
            will be used as the `audience` parameter in authorization claims.
          example: https://api.example.com
          type: string
        is_management_api:
          description: Whether or not it is the Kinde management API.
          example: false
          type: boolean
        scopes:
          items:
            $ref: '#/components/schemas/get_apis_response_apis_inner_scopes_inner'
          type: array
      type: object
    create_apis_response_api:
      example:
        id: 7ccd126599aa422a771abcb341596881
      properties:
        id:
          description: The unique ID for the API.
          example: 7ccd126599aa422a771abcb341596881
          type: string
      type: object
    create_api_scopes_response_scope:
      example:
        id: api_scope_0193ab57965aef77b2b687d0ef673713
      properties:
        id:
          description: The unique ID for the API scope.
          example: api_scope_0193ab57965aef77b2b687d0ef673713
          type: string
      type: object
    create_environment_variable_response_environment_variable:
      example:
        id: env_var_0192b194f6156fb7452fe38cfb144958
      properties:
        id:
          description: The unique ID for the environment variable.
          example: env_var_0192b194f6156fb7452fe38cfb144958
          type: string
      type: object
    get_business_response_business:
      example:
        code: bus_c69fb73b091
        phone: 555-555-5555
        has_kinde_branding: true
        created_on: 2021-01-01T00:00:00Z
        timezone: Los Angeles (Pacific Standard Time)
        terms_url: https://example.com/terms
        name: Tailsforce Ltd
        privacy_url: https://example.com/privacy
        industry: Healthcare & Medical
        has_clickwrap: false
        email: sally@example.com
      properties:
        code:
          description: The unique ID for the business.
          example: bus_c69fb73b091
          type: string
        name:
          description: Your business's name.
          example: Tailsforce Ltd
          type: string
        phone:
          description: Phone number associated with business.
          example: 555-555-5555
          nullable: true
          type: string
        email:
          description: Email address associated with business.
          example: sally@example.com
          nullable: true
          type: string
        industry:
          description: The industry your business is in.
          example: Healthcare & Medical
          nullable: true
          type: string
        timezone:
          description: The timezone your business is in.
          example: Los Angeles (Pacific Standard Time)
          nullable: true
          type: string
        privacy_url:
          description: Your Privacy policy URL.
          example: https://example.com/privacy
          nullable: true
          type: string
        terms_url:
          description: Your Terms and Conditions URL.
          example: https://example.com/terms
          nullable: true
          type: string
        has_clickwrap:
          description: Whether your business uses clickwrap agreements.
          example: false
          type: boolean
        has_kinde_branding:
          description: Whether your business shows Kinde branding.
          example: true
          type: boolean
        created_on:
          description: Date of business creation in ISO 8601 format.
          example: 2021-01-01T00:00:00Z
          type: string
      type: object
    get_industries_response_industries_inner:
      example:
        name: Administration & Office Support
        key: administration_office_support
      properties:
        key:
          description: The unique key for the industry.
          example: administration_office_support
          type: string
        name:
          description: The display name for the industry.
          example: Administration & Office Support
          type: string
      type: object
    get_timezones_response_timezones_inner:
      example:
        name: "London (Greenwich Mean Time) [+01:00]"
        key: london_greenwich_mean_time
      properties:
        key:
          description: The unique key for the timezone.
          example: london_greenwich_mean_time
          type: string
        name:
          description: The display name for the timezone.
          example: "London (Greenwich Mean Time) [+01:00]"
          type: string
      type: object
    get_api_response_api_scopes_inner:
      example:
        id: api_scope_01939222ef24200668b9f5829af001ce
        key: read:logs
      properties:
        id:
          description: The ID of the scope.
          example: api_scope_01939222ef24200668b9f5829af001ce
          type: string
        key:
          description: The reference key for the scope.
          example: read:logs
          type: string
      type: object
    get_api_response_api_applications_inner:
      example:
        is_active: true
        name: My M2M app
        id: 3b0b5c6c8fcc464fab397f4969b5f482
        type: Machine to machine (M2M)
      properties:
        id:
          description: The Client ID of the application.
          example: 3b0b5c6c8fcc464fab397f4969b5f482
          type: string
        name:
          description: The application's name.
          example: My M2M app
          type: string
        type:
          description: The application's type.
          enum:
          - Machine to machine (M2M)
          - Back-end web
          - Front-end and mobile
          example: Machine to machine (M2M)
          type: string
        is_active:
          description: Whether or not the application is authorized to access the
            API
          example: true
          nullable: true
          type: boolean
      type: object
    get_api_response_api:
      example:
        audience: https://api.example.com
        is_management_api: false
        name: Example API
        id: 7ccd126599aa422a771abcb341596881
        scopes:
        - id: api_scope_01939222ef24200668b9f5829af001ce
          key: read:logs
        - id: api_scope_01939222ef24200668b9f5829af001ce
          key: read:logs
        applications:
        - is_active: true
          name: My M2M app
          id: 3b0b5c6c8fcc464fab397f4969b5f482
          type: Machine to machine (M2M)
        - is_active: true
          name: My M2M app
          id: 3b0b5c6c8fcc464fab397f4969b5f482
          type: Machine to machine (M2M)
      properties:
        id:
          description: Unique ID of the API.
          example: 7ccd126599aa422a771abcb341596881
          type: string
        name:
          description: The API’s name.
          example: Example API
          type: string
        audience:
          description: A unique identifier for the API - commonly the URL. This value
            will be used as the `audience` parameter in authorization claims.
          example: https://api.example.com
          type: string
        is_management_api:
          description: Whether or not it is the Kinde management API.
          example: false
          type: boolean
        scopes:
          items:
            $ref: '#/components/schemas/get_api_response_api_scopes_inner'
          type: array
        applications:
          items:
            $ref: '#/components/schemas/get_api_response_api_applications_inner'
          type: array
      type: object
    get_api_scopes_response_scopes_inner:
      example:
        description: Read logs scope
        id: api_scope_01939128c3d7193ae87c4755213c07c6
        key: read:logs
      properties:
        id:
          description: Unique ID of the API scope.
          example: api_scope_01939128c3d7193ae87c4755213c07c6
          type: string
        key:
          description: The scope's reference key.
          example: read:logs
          type: string
        description:
          description: Explanation of the scope purpose.
          example: Read logs scope
          type: string
      type: object
    user_identities_inner:
      example:
        identity: identity
        type: type
      properties:
        type:
          type: string
        identity:
          type: string
      type: object
    users_response_users_inner:
      example:
        failed_sign_ins: 6
        last_name: last_name
        is_suspended: true
        last_signed_in: last_signed_in
        total_sign_ins: 0
        picture: picture
        identities:
        - identity: identity
          type: type
        - identity: identity
          type: type
        created_on: created_on
        organizations:
        - organizations
        - organizations
        id: id
        provided_id: provided_id
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          description: Unique ID of the user in Kinde.
          type: string
        provided_id:
          description: External ID for user.
          type: string
        email:
          description: Default email address of the user in Kinde.
          type: string
        username:
          description: Primary username of the user in Kinde.
          type: string
        last_name:
          description: User's last name.
          type: string
        first_name:
          description: User's first name.
          type: string
        is_suspended:
          description: Whether the user is currently suspended or not.
          type: boolean
        picture:
          description: User's profile picture URL.
          type: string
        total_sign_ins:
          description: Total number of user sign ins.
          nullable: true
          type: integer
        failed_sign_ins:
          description: Number of consecutive failed user sign ins.
          nullable: true
          type: integer
        last_signed_in:
          description: Last sign in date in ISO 8601 format.
          nullable: true
          type: string
        created_on:
          description: Date of user creation in ISO 8601 format.
          nullable: true
          type: string
        organizations:
          description: Array of organizations a user belongs to.
          items:
            type: string
          type: array
        identities:
          description: Array of identities belonging to the user.
          items:
            $ref: '#/components/schemas/user_identities_inner'
          type: array
      type: object
    create_organization_response_organization:
      example:
        code: org_1ccfb819462
      properties:
        code:
          description: The organization's unique code.
          example: org_1ccfb819462
          type: string
      type: object
    user_identity_result:
      description: The result of the user creation operation.
      example:
        created: true
      properties:
        created:
          description: True if the user identity was successfully created.
          type: boolean
      type: object
    create_property_response_property:
      example:
        id: id
      properties:
        id:
          description: The property's ID.
          type: string
      type: object
    create_identity_response_identity:
      example:
        id: id
      properties:
        id:
          description: The identity's ID.
          type: string
      type: object
    get_user_mfa_response_mfa:
      example:
        usage_count: 2
        created_on: 2024-11-18T13:31:46.795085+11:00
        last_used_on: 2024-11-18T13:32:07.22538+11:00
        name: sally@gmail.com
        id: mfa_01933d1ca1f093e7fad48ebcdb65a871
        type: email
        is_verified: true
      properties:
        id:
          description: The MFA's identifier.
          example: mfa_01933d1ca1f093e7fad48ebcdb65a871
          type: string
        type:
          description: "The type of MFA (e.g. email, SMS, authenticator app)."
          example: email
          type: string
        created_on:
          description: The timestamp when the MFA was created.
          example: 2024-11-18T13:31:46.795085+11:00
          format: date-time
          type: string
        name:
          description: "The identifier used for MFA (e.g. email address, phone number)."
          example: sally@gmail.com
          type: string
        is_verified:
          description: Whether the MFA is verified or not.
          example: true
          type: boolean
        usage_count:
          description: The number of times MFA has been used.
          example: 2
          type: integer
        last_used_on:
          description: The timestamp when the MFA was last used.
          example: 2024-11-18T13:32:07.22538+11:00
          format: date-time
          type: string
      type: object
    create_category_response_category:
      example:
        id: id
      properties:
        id:
          description: The category's ID.
          type: string
      type: object
    get_event_response_event:
      example:
        event_id: event_id
        data: "{}"
        source: source
        type: type
        timestamp: 0
      properties:
        type:
          type: string
        source:
          type: string
        event_id:
          type: string
        timestamp:
          description: Timestamp in ISO 8601 format.
          type: integer
        data:
          description: Event specific data object.
          type: object
      type: object
    create_webhook_response_webhook:
      example:
        endpoint: endpoint
        id: id
      properties:
        id:
          type: string
        endpoint:
          type: string
      type: object
    update_webhook_response_webhook:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    create_connection_response_connection:
      example:
        id: id
      properties:
        id:
          description: The connection's ID.
          type: string
      type: object
    get_environment_response_environment_link_color:
      example:
        hsl: "hsl(220, 100%, 50%)"
        raw: '#0056F1'
        hex: '#0056F1'
      nullable: true
      properties:
        raw:
          example: '#0056F1'
          type: string
        hex:
          example: '#0056F1'
          type: string
        hsl:
          example: "hsl(220, 100%, 50%)"
          type: string
      type: object
    get_environment_response_environment_background_color:
      example:
        hsl: "hsl(0, 0%, 100%)"
        raw: '#ffffff'
        hex: '#ffffff'
      nullable: true
      properties:
        raw:
          example: '#ffffff'
          type: string
        hex:
          example: '#ffffff'
          type: string
        hsl:
          example: "hsl(0, 0%, 100%)"
          type: string
      type: object
    get_environment_response_environment:
      example:
        code: production
        google_analytics_tag: G-1234567
        favicon_fallback: https://yoursubdomain.kinde.com/favicon_fallback?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
        button_color_dark:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        button_border_radius: 8
        input_border_radius: 4
        link_color:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        theme_code: light
        button_text_color_dark:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        logo: https://yoursubdomain.kinde.com/logo?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
        color_scheme: light
        custom_domain: app.example.com
        hotjar_site_id: "404009"
        kinde_domain: example.kinde.com
        is_default: true
        card_border_radius: 16
        background_color_dark:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        button_color:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        background_color:
          hsl: "hsl(0, 0%, 100%)"
          raw: '#ffffff'
          hex: '#ffffff'
        button_text_color:
          hsl: "hsl(0, 0%, 100%)"
          raw: '#ffffff'
          hex: '#ffffff'
        created_on: 2021-01-01T00:00:00Z
        name: Production
        is_live: true
        logo_dark: https://yoursubdomain.kinde.com/logo_dark?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
        link_color_dark:
          hsl: "hsl(220, 100%, 50%)"
          raw: '#0056F1'
          hex: '#0056F1'
        favicon_svg: https://yoursubdomain.kinde.com/favicon_svg?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
      properties:
        code:
          description: The unique identifier for the environment.
          example: production
          type: string
        name:
          description: The environment's name.
          example: Production
          type: string
        hotjar_site_id:
          description: Your HotJar site ID.
          example: "404009"
          nullable: true
          type: string
        google_analytics_tag:
          description: Your Google Analytics tag.
          example: G-1234567
          nullable: true
          type: string
        is_default:
          description: Whether the environment is the default. Typically this is your
            production environment.
          example: true
          type: boolean
        is_live:
          description: Whether the environment is live.
          example: true
          type: boolean
        kinde_domain:
          description: Your domain on Kinde
          example: example.kinde.com
          type: string
        custom_domain:
          description: Your custom domain for the environment
          example: app.example.com
          nullable: true
          type: string
        logo:
          description: The organization's logo URL.
          example: https://yoursubdomain.kinde.com/logo?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
          nullable: true
          type: string
        logo_dark:
          description: The organization's logo URL to be used for dark themes.
          example: https://yoursubdomain.kinde.com/logo_dark?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
          nullable: true
          type: string
        favicon_svg:
          description: The organization's SVG favicon URL. Optimal format for most
            browsers
          example: https://yoursubdomain.kinde.com/favicon_svg?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
          nullable: true
          type: string
        favicon_fallback:
          description: "The favicon URL to be used as a fallback in browsers that\
            \ don’t support SVG, add a PNG"
          example: https://yoursubdomain.kinde.com/favicon_fallback?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d
          nullable: true
          type: string
        link_color:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        background_color:
          $ref: '#/components/schemas/get_environment_response_environment_background_color'
        button_color:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        button_text_color:
          $ref: '#/components/schemas/get_environment_response_environment_background_color'
        link_color_dark:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        background_color_dark:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        button_text_color_dark:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        button_color_dark:
          $ref: '#/components/schemas/get_environment_response_environment_link_color'
        button_border_radius:
          description: "The border radius for buttons. Value is px, Kinde transforms\
            \ to rem for rendering"
          example: 8
          nullable: true
          type: integer
        card_border_radius:
          description: "The border radius for cards. Value is px, Kinde transforms\
            \ to rem for rendering"
          example: 16
          nullable: true
          type: integer
        input_border_radius:
          description: "The border radius for inputs. Value is px, Kinde transforms\
            \ to rem for rendering"
          example: 4
          nullable: true
          type: integer
        theme_code:
          description: "Whether the environment is forced into light mode, dark mode\
            \ or user preference"
          enum:
          - light
          - dark
          - user_preference
          type: string
        color_scheme:
          description: The color scheme for the environment used for meta tags based
            on the theme code
          enum:
          - light
          - dark
          - light dark
          type: string
        created_on:
          description: Date of environment creation in ISO 8601 format.
          example: 2021-01-01T00:00:00Z
          type: string
      type: object
    connection_connection:
      example:
        name: name
        id: id
        display_name: display_name
        strategy: strategy
      properties:
        id:
          type: string
        name:
          type: string
        display_name:
          type: string
        strategy:
          type: string
      type: object
    organization_user_role_permissions_permissions:
      properties:
        key:
          type: string
      type: object
    organization_user_permission_roles_inner:
      example:
        id: id
        key: key
      properties:
        id:
          type: string
        key:
          type: string
      type: object
    get_role_response_role:
      example:
        is_default_role: false
        name: Administrator
        description: Full access to all resources.
        id: 01929904-316d-bb2c-069f-99dfea4ac394
        key: admin
      properties:
        id:
          description: The role's ID.
          example: 01929904-316d-bb2c-069f-99dfea4ac394
          type: string
        key:
          description: The role identifier to use in code.
          example: admin
          type: string
        name:
          description: The role's name.
          example: Administrator
          type: string
        description:
          description: The role's description.
          example: Full access to all resources.
          type: string
        is_default_role:
          description: Whether the role is the default role.
          example: false
          type: boolean
      type: object
    create_roles_response_role:
      example:
        id: id
      properties:
        id:
          description: The role's ID.
          type: string
      type: object
    get_organization_feature_flags_response_feature_flags_value:
      example:
        type: str
        value: value
      properties:
        type:
          enum:
          - str
          - int
          - bool
          type: string
        value:
          type: string
      type: object
    create_subscriber_success_response_subscriber:
      example:
        subscriber_id: subscriber_id
      properties:
        subscriber_id:
          description: A unique identifier for the subscriber.
          type: string
      type: object
    create_application_response_application:
      example:
        id: 3b0b5c6c8fcc464fab397f4969b5f482
        client_secret: sUJSHI3ZQEVTJkx6hOxdOSHaLsZkCBRFLzTNOI791rX8mDjgt7LC
        client_id: 3b0b5c6c8fcc464fab397f4969b5f482
      properties:
        id:
          description: The application's identifier.
          example: 3b0b5c6c8fcc464fab397f4969b5f482
          type: string
        client_id:
          description: The application's client ID.
          example: 3b0b5c6c8fcc464fab397f4969b5f482
          type: string
        client_secret:
          description: The application's client secret.
          example: sUJSHI3ZQEVTJkx6hOxdOSHaLsZkCBRFLzTNOI791rX8mDjgt7LC
          type: string
      type: object
    get_application_response_application:
      example:
        homepage_uri: https://yourapp.com
        name: My React app
        id: 3b0b5c6c8fcc464fab397f4969b5f482
        client_secret: sUJSHI3ZQEVTJkx6hOxdOSHaLsZkCBRFLzTNOI791rX8mDjgt7LC
        type: m2m
        login_uri: https://yourapp.com/api/auth/login
        client_id: 3b0b5c6c8fcc464fab397f4969b5f482
        has_cancel_button: false
      properties:
        id:
          description: The application's identifier.
          example: 3b0b5c6c8fcc464fab397f4969b5f482
          type: string
        name:
          description: The application's name.
          example: My React app
          type: string
        type:
          description: The application's type.
          enum:
          - m2m
          - reg
          - spa
          type: string
        client_id:
          description: The application's client ID.
          example: 3b0b5c6c8fcc464fab397f4969b5f482
          type: string
        client_secret:
          description: The application's client secret.
          example: sUJSHI3ZQEVTJkx6hOxdOSHaLsZkCBRFLzTNOI791rX8mDjgt7LC
          type: string
        login_uri:
          description: The default login route for resolving session issues.
          example: https://yourapp.com/api/auth/login
          type: string
        homepage_uri:
          description: The homepage link to your application.
          example: https://yourapp.com
          type: string
        has_cancel_button:
          description: "Whether the application has a cancel button to allow users\
            \ to exit the auth flow [Beta]."
          example: false
          type: boolean
      type: object
    read_logo_response_logos_inner:
      example:
        path: /logo?p_org_code=org_1767f11ce62
        file_name: kinde_light.jpeg
        type: light
      properties:
        type:
          description: The type of logo (light or dark).
          example: light
          type: string
        file_name:
          description: The name of the logo file.
          example: kinde_light.jpeg
          type: string
        path:
          description: The relative path to the logo file.
          example: /logo?p_org_code=org_1767f11ce62
          type: string
      type: object
  securitySchemes:
    kindeBearerAuth:
      bearerFormat: JWT
      description: |
        Accessing the API requires obtaining an access token when login in through Kinde. However, management functions (for e.g. user management) requires an access token obtained using the client_credentials flow.
      scheme: bearer
      type: http

